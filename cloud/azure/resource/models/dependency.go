package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// Dependency Deployment dependency information.
// swagger:model Dependency
type Dependency struct {

	// The list of dependencies.
	DependsOn []*BasicDependency `json:"dependsOn"`

	// The ID of the dependency.
	ID string `json:"id,omitempty"`

	// The dependency resource name.
	ResourceName string `json:"resourceName,omitempty"`

	// The dependency resource type.
	ResourceType string `json:"resourceType,omitempty"`
}

// Validate validates this dependency
func (m *Dependency) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDependsOn(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Dependency) validateDependsOn(formats strfmt.Registry) error {

	if swag.IsZero(m.DependsOn) { // not required
		return nil
	}

	for i := 0; i < len(m.DependsOn); i++ {

		if swag.IsZero(m.DependsOn[i]) { // not required
			continue
		}

		if m.DependsOn[i] != nil {

			if err := m.DependsOn[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("dependsOn" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}
