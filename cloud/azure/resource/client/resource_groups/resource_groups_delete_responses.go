package resource_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ResourceGroupsDeleteReader is a Reader for the ResourceGroupsDelete structure.
type ResourceGroupsDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResourceGroupsDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewResourceGroupsDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewResourceGroupsDeleteAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewResourceGroupsDeleteOK creates a ResourceGroupsDeleteOK with default headers values
func NewResourceGroupsDeleteOK() *ResourceGroupsDeleteOK {
	return &ResourceGroupsDeleteOK{}
}

/*ResourceGroupsDeleteOK handles this case with default header values.

OK
*/
type ResourceGroupsDeleteOK struct {
}

func (o *ResourceGroupsDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}][%d] resourceGroupsDeleteOK ", 200)
}

func (o *ResourceGroupsDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResourceGroupsDeleteAccepted creates a ResourceGroupsDeleteAccepted with default headers values
func NewResourceGroupsDeleteAccepted() *ResourceGroupsDeleteAccepted {
	return &ResourceGroupsDeleteAccepted{}
}

/*ResourceGroupsDeleteAccepted handles this case with default header values.

Accepted
*/
type ResourceGroupsDeleteAccepted struct {
}

func (o *ResourceGroupsDeleteAccepted) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}][%d] resourceGroupsDeleteAccepted ", 202)
}

func (o *ResourceGroupsDeleteAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
