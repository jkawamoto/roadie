package resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ResourcesDeleteReader is a Reader for the ResourcesDelete structure.
type ResourcesDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResourcesDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewResourcesDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewResourcesDeleteAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewResourcesDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewResourcesDeleteOK creates a ResourcesDeleteOK with default headers values
func NewResourcesDeleteOK() *ResourcesDeleteOK {
	return &ResourcesDeleteOK{}
}

/*ResourcesDeleteOK handles this case with default header values.

OK
*/
type ResourcesDeleteOK struct {
}

func (o *ResourcesDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}][%d] resourcesDeleteOK ", 200)
}

func (o *ResourcesDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResourcesDeleteAccepted creates a ResourcesDeleteAccepted with default headers values
func NewResourcesDeleteAccepted() *ResourcesDeleteAccepted {
	return &ResourcesDeleteAccepted{}
}

/*ResourcesDeleteAccepted handles this case with default header values.

Accepted
*/
type ResourcesDeleteAccepted struct {
}

func (o *ResourcesDeleteAccepted) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}][%d] resourcesDeleteAccepted ", 202)
}

func (o *ResourcesDeleteAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResourcesDeleteNoContent creates a ResourcesDeleteNoContent with default headers values
func NewResourcesDeleteNoContent() *ResourcesDeleteNoContent {
	return &ResourcesDeleteNoContent{}
}

/*ResourcesDeleteNoContent handles this case with default header values.

No Content
*/
type ResourcesDeleteNoContent struct {
}

func (o *ResourcesDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{parentResourcePath}/{resourceType}/{resourceName}][%d] resourcesDeleteNoContent ", 204)
}

func (o *ResourcesDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
