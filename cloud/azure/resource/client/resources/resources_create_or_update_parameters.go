package resources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/jkawamoto/roadie/cloud/azure/resource/models"
)

// NewResourcesCreateOrUpdateParams creates a new ResourcesCreateOrUpdateParams object
// with the default values initialized.
func NewResourcesCreateOrUpdateParams() *ResourcesCreateOrUpdateParams {
	var ()
	return &ResourcesCreateOrUpdateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewResourcesCreateOrUpdateParamsWithTimeout creates a new ResourcesCreateOrUpdateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewResourcesCreateOrUpdateParamsWithTimeout(timeout time.Duration) *ResourcesCreateOrUpdateParams {
	var ()
	return &ResourcesCreateOrUpdateParams{

		timeout: timeout,
	}
}

// NewResourcesCreateOrUpdateParamsWithContext creates a new ResourcesCreateOrUpdateParams object
// with the default values initialized, and the ability to set a context for a request
func NewResourcesCreateOrUpdateParamsWithContext(ctx context.Context) *ResourcesCreateOrUpdateParams {
	var ()
	return &ResourcesCreateOrUpdateParams{

		Context: ctx,
	}
}

// NewResourcesCreateOrUpdateParamsWithHTTPClient creates a new ResourcesCreateOrUpdateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewResourcesCreateOrUpdateParamsWithHTTPClient(client *http.Client) *ResourcesCreateOrUpdateParams {
	var ()
	return &ResourcesCreateOrUpdateParams{
		HTTPClient: client,
	}
}

/*ResourcesCreateOrUpdateParams contains all the parameters to send to the API endpoint
for the resources create or update operation typically these are written to a http.Request
*/
type ResourcesCreateOrUpdateParams struct {

	/*APIVersion
	  The API version to use for the operation.

	*/
	APIVersion string
	/*Parameters
	  Parameters for creating or updating the resource.

	*/
	Parameters *models.GenericResource
	/*ParentResourcePath
	  The parent resource identity.

	*/
	ParentResourcePath string
	/*ResourceGroupName
	  The name of the resource group for the resource. The name is case insensitive.

	*/
	ResourceGroupName string
	/*ResourceName
	  The name of the resource to create.

	*/
	ResourceName string
	/*ResourceProviderNamespace
	  The namespace of the resource provider.

	*/
	ResourceProviderNamespace string
	/*ResourceType
	  The resource type of the resource to create.

	*/
	ResourceType string
	/*SubscriptionID
	  The ID of the target subscription.

	*/
	SubscriptionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) WithTimeout(timeout time.Duration) *ResourcesCreateOrUpdateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) WithContext(ctx context.Context) *ResourcesCreateOrUpdateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) WithHTTPClient(client *http.Client) *ResourcesCreateOrUpdateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) WithAPIVersion(aPIVersion string) *ResourcesCreateOrUpdateParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithParameters adds the parameters to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) WithParameters(parameters *models.GenericResource) *ResourcesCreateOrUpdateParams {
	o.SetParameters(parameters)
	return o
}

// SetParameters adds the parameters to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) SetParameters(parameters *models.GenericResource) {
	o.Parameters = parameters
}

// WithParentResourcePath adds the parentResourcePath to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) WithParentResourcePath(parentResourcePath string) *ResourcesCreateOrUpdateParams {
	o.SetParentResourcePath(parentResourcePath)
	return o
}

// SetParentResourcePath adds the parentResourcePath to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) SetParentResourcePath(parentResourcePath string) {
	o.ParentResourcePath = parentResourcePath
}

// WithResourceGroupName adds the resourceGroupName to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) WithResourceGroupName(resourceGroupName string) *ResourcesCreateOrUpdateParams {
	o.SetResourceGroupName(resourceGroupName)
	return o
}

// SetResourceGroupName adds the resourceGroupName to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) SetResourceGroupName(resourceGroupName string) {
	o.ResourceGroupName = resourceGroupName
}

// WithResourceName adds the resourceName to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) WithResourceName(resourceName string) *ResourcesCreateOrUpdateParams {
	o.SetResourceName(resourceName)
	return o
}

// SetResourceName adds the resourceName to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) SetResourceName(resourceName string) {
	o.ResourceName = resourceName
}

// WithResourceProviderNamespace adds the resourceProviderNamespace to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) WithResourceProviderNamespace(resourceProviderNamespace string) *ResourcesCreateOrUpdateParams {
	o.SetResourceProviderNamespace(resourceProviderNamespace)
	return o
}

// SetResourceProviderNamespace adds the resourceProviderNamespace to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) SetResourceProviderNamespace(resourceProviderNamespace string) {
	o.ResourceProviderNamespace = resourceProviderNamespace
}

// WithResourceType adds the resourceType to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) WithResourceType(resourceType string) *ResourcesCreateOrUpdateParams {
	o.SetResourceType(resourceType)
	return o
}

// SetResourceType adds the resourceType to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) SetResourceType(resourceType string) {
	o.ResourceType = resourceType
}

// WithSubscriptionID adds the subscriptionID to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) WithSubscriptionID(subscriptionID string) *ResourcesCreateOrUpdateParams {
	o.SetSubscriptionID(subscriptionID)
	return o
}

// SetSubscriptionID adds the subscriptionId to the resources create or update params
func (o *ResourcesCreateOrUpdateParams) SetSubscriptionID(subscriptionID string) {
	o.SubscriptionID = subscriptionID
}

// WriteToRequest writes these params to a swagger request
func (o *ResourcesCreateOrUpdateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param api-version
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if qAPIVersion != "" {
		if err := r.SetQueryParam("api-version", qAPIVersion); err != nil {
			return err
		}
	}

	if o.Parameters == nil {
		o.Parameters = new(models.GenericResource)
	}

	if err := r.SetBodyParam(o.Parameters); err != nil {
		return err
	}

	// path param parentResourcePath
	if err := r.SetPathParam("parentResourcePath", o.ParentResourcePath); err != nil {
		return err
	}

	// path param resourceGroupName
	if err := r.SetPathParam("resourceGroupName", o.ResourceGroupName); err != nil {
		return err
	}

	// path param resourceName
	if err := r.SetPathParam("resourceName", o.ResourceName); err != nil {
		return err
	}

	// path param resourceProviderNamespace
	if err := r.SetPathParam("resourceProviderNamespace", o.ResourceProviderNamespace); err != nil {
		return err
	}

	// path param resourceType
	if err := r.SetPathParam("resourceType", o.ResourceType); err != nil {
		return err
	}

	// path param subscriptionId
	if err := r.SetPathParam("subscriptionId", o.SubscriptionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
