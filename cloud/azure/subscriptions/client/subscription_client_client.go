package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/jkawamoto/roadie/cloud/azure/subscriptions/client/subscriptions"
	"github.com/jkawamoto/roadie/cloud/azure/subscriptions/client/tenants"
)

// Default subscription client HTTP client.
var Default = NewHTTPClient(nil)

// NewHTTPClient creates a new subscription client HTTP client.
func NewHTTPClient(formats strfmt.Registry) *SubscriptionClient {
	if formats == nil {
		formats = strfmt.Default
	}
	transport := httptransport.New("management.azure.com", "/", []string{"https"})
	return New(transport, formats)
}

// New creates a new subscription client client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *SubscriptionClient {
	cli := new(SubscriptionClient)
	cli.Transport = transport

	cli.Subscriptions = subscriptions.New(transport, formats)

	cli.Tenants = tenants.New(transport, formats)

	return cli
}

// SubscriptionClient is a client for subscription client
type SubscriptionClient struct {
	Subscriptions *subscriptions.Client

	Tenants *tenants.Client

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *SubscriptionClient) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport

	c.Subscriptions.SetTransport(transport)

	c.Tenants.SetTransport(transport)

}
