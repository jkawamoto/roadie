package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// VpnClientParameters VpnClientParameters
// swagger:model VpnClientParameters
type VpnClientParameters struct {

	// VPN client Processor Architecture -Amd64/X86
	ProcessorArchitecture string `json:"ProcessorArchitecture,omitempty"`
}

// Validate validates this vpn client parameters
func (m *VpnClientParameters) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProcessorArchitecture(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var vpnClientParametersTypeProcessorArchitecturePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Amd64","X86"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		vpnClientParametersTypeProcessorArchitecturePropEnum = append(vpnClientParametersTypeProcessorArchitecturePropEnum, v)
	}
}

const (
	// VpnClientParametersProcessorArchitectureAmd64 captures enum value "Amd64"
	VpnClientParametersProcessorArchitectureAmd64 string = "Amd64"
	// VpnClientParametersProcessorArchitectureX86 captures enum value "X86"
	VpnClientParametersProcessorArchitectureX86 string = "X86"
)

// prop value enum
func (m *VpnClientParameters) validateProcessorArchitectureEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, vpnClientParametersTypeProcessorArchitecturePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *VpnClientParameters) validateProcessorArchitecture(formats strfmt.Registry) error {

	if swag.IsZero(m.ProcessorArchitecture) { // not required
		return nil
	}

	// value enum
	if err := m.validateProcessorArchitectureEnum("ProcessorArchitecture", "body", m.ProcessorArchitecture); err != nil {
		return err
	}

	return nil
}
