package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// VirtualNetworkGatewaySku VirtualNetworkGatewaySku details
// swagger:model VirtualNetworkGatewaySku
type VirtualNetworkGatewaySku struct {

	// The capacity
	Capacity int32 `json:"capacity,omitempty"`

	// Gateway sku name -Basic/HighPerformance/Standard
	Name string `json:"name,omitempty"`

	// Gateway sku tier -Basic/HighPerformance/Standard
	Tier string `json:"tier,omitempty"`
}

// Validate validates this virtual network gateway sku
func (m *VirtualNetworkGatewaySku) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTier(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var virtualNetworkGatewaySkuTypeNamePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Basic","HighPerformance","Standard"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		virtualNetworkGatewaySkuTypeNamePropEnum = append(virtualNetworkGatewaySkuTypeNamePropEnum, v)
	}
}

const (
	// VirtualNetworkGatewaySkuNameBasic captures enum value "Basic"
	VirtualNetworkGatewaySkuNameBasic string = "Basic"
	// VirtualNetworkGatewaySkuNameHighPerformance captures enum value "HighPerformance"
	VirtualNetworkGatewaySkuNameHighPerformance string = "HighPerformance"
	// VirtualNetworkGatewaySkuNameStandard captures enum value "Standard"
	VirtualNetworkGatewaySkuNameStandard string = "Standard"
)

// prop value enum
func (m *VirtualNetworkGatewaySku) validateNameEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, virtualNetworkGatewaySkuTypeNamePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *VirtualNetworkGatewaySku) validateName(formats strfmt.Registry) error {

	if swag.IsZero(m.Name) { // not required
		return nil
	}

	// value enum
	if err := m.validateNameEnum("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

var virtualNetworkGatewaySkuTypeTierPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Basic","HighPerformance","Standard"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		virtualNetworkGatewaySkuTypeTierPropEnum = append(virtualNetworkGatewaySkuTypeTierPropEnum, v)
	}
}

const (
	// VirtualNetworkGatewaySkuTierBasic captures enum value "Basic"
	VirtualNetworkGatewaySkuTierBasic string = "Basic"
	// VirtualNetworkGatewaySkuTierHighPerformance captures enum value "HighPerformance"
	VirtualNetworkGatewaySkuTierHighPerformance string = "HighPerformance"
	// VirtualNetworkGatewaySkuTierStandard captures enum value "Standard"
	VirtualNetworkGatewaySkuTierStandard string = "Standard"
)

// prop value enum
func (m *VirtualNetworkGatewaySku) validateTierEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, virtualNetworkGatewaySkuTypeTierPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *VirtualNetworkGatewaySku) validateTier(formats strfmt.Registry) error {

	if swag.IsZero(m.Tier) { // not required
		return nil
	}

	// value enum
	if err := m.validateTierEnum("tier", "body", m.Tier); err != nil {
		return err
	}

	return nil
}
