package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// RoutePropertiesFormat Route resource
// swagger:model RoutePropertiesFormat
type RoutePropertiesFormat struct {

	// Gets or sets the destination CIDR to which the route applies.
	AddressPrefix string `json:"addressPrefix,omitempty"`

	// Gets or sets the IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIPAddress string `json:"nextHopIpAddress,omitempty"`

	// Gets or sets the type of Azure hop the packet should be sent to.
	// Required: true
	NextHopType *string `json:"nextHopType"`

	// Gets or sets Provisioning state of the resource Updating/Deleting/Failed
	ProvisioningState string `json:"provisioningState,omitempty"`
}

// Validate validates this route properties format
func (m *RoutePropertiesFormat) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNextHopType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var routePropertiesFormatTypeNextHopTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["VirtualNetworkGateway","VnetLocal","Internet","VirtualAppliance","None"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		routePropertiesFormatTypeNextHopTypePropEnum = append(routePropertiesFormatTypeNextHopTypePropEnum, v)
	}
}

const (
	// RoutePropertiesFormatNextHopTypeVirtualNetworkGateway captures enum value "VirtualNetworkGateway"
	RoutePropertiesFormatNextHopTypeVirtualNetworkGateway string = "VirtualNetworkGateway"
	// RoutePropertiesFormatNextHopTypeVnetLocal captures enum value "VnetLocal"
	RoutePropertiesFormatNextHopTypeVnetLocal string = "VnetLocal"
	// RoutePropertiesFormatNextHopTypeInternet captures enum value "Internet"
	RoutePropertiesFormatNextHopTypeInternet string = "Internet"
	// RoutePropertiesFormatNextHopTypeVirtualAppliance captures enum value "VirtualAppliance"
	RoutePropertiesFormatNextHopTypeVirtualAppliance string = "VirtualAppliance"
	// RoutePropertiesFormatNextHopTypeNone captures enum value "None"
	RoutePropertiesFormatNextHopTypeNone string = "None"
)

// prop value enum
func (m *RoutePropertiesFormat) validateNextHopTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, routePropertiesFormatTypeNextHopTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *RoutePropertiesFormat) validateNextHopType(formats strfmt.Registry) error {

	if err := validate.Required("nextHopType", "body", m.NextHopType); err != nil {
		return err
	}

	// value enum
	if err := m.validateNextHopTypeEnum("nextHopType", "body", *m.NextHopType); err != nil {
		return err
	}

	return nil
}
