package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// BackendAddressPoolPropertiesFormat Properties of BackendAddressPool
// swagger:model BackendAddressPoolPropertiesFormat
type BackendAddressPoolPropertiesFormat struct {

	// Gets collection of references to IPs defined in NICs
	BackendIPConfigurations []*NetworkInterfaceIPConfiguration `json:"backendIPConfigurations"`

	// Gets Load Balancing rules that use this Backend Address Pool
	LoadBalancingRules []*SubResource `json:"loadBalancingRules"`

	// Gets outbound rules that use this Backend Address Pool
	OutboundNatRule *SubResource `json:"outboundNatRule,omitempty"`

	// Provisioning state of the PublicIP resource Updating/Deleting/Failed
	ProvisioningState string `json:"provisioningState,omitempty"`
}

// Validate validates this backend address pool properties format
func (m *BackendAddressPoolPropertiesFormat) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBackendIPConfigurations(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateLoadBalancingRules(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateOutboundNatRule(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BackendAddressPoolPropertiesFormat) validateBackendIPConfigurations(formats strfmt.Registry) error {

	if swag.IsZero(m.BackendIPConfigurations) { // not required
		return nil
	}

	for i := 0; i < len(m.BackendIPConfigurations); i++ {

		if swag.IsZero(m.BackendIPConfigurations[i]) { // not required
			continue
		}

		if m.BackendIPConfigurations[i] != nil {

			if err := m.BackendIPConfigurations[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *BackendAddressPoolPropertiesFormat) validateLoadBalancingRules(formats strfmt.Registry) error {

	if swag.IsZero(m.LoadBalancingRules) { // not required
		return nil
	}

	for i := 0; i < len(m.LoadBalancingRules); i++ {

		if swag.IsZero(m.LoadBalancingRules[i]) { // not required
			continue
		}

		if m.LoadBalancingRules[i] != nil {

			if err := m.LoadBalancingRules[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *BackendAddressPoolPropertiesFormat) validateOutboundNatRule(formats strfmt.Registry) error {

	if swag.IsZero(m.OutboundNatRule) { // not required
		return nil
	}

	if m.OutboundNatRule != nil {

		if err := m.OutboundNatRule.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
