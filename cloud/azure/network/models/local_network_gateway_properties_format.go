package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// LocalNetworkGatewayPropertiesFormat LocalNetworkGateway properties
// swagger:model LocalNetworkGatewayPropertiesFormat
type LocalNetworkGatewayPropertiesFormat struct {

	// Local network gateway's BGP speaker settings
	BgpSettings *BgpSettings `json:"bgpSettings,omitempty"`

	// IP address of local network gateway.
	GatewayIPAddress string `json:"gatewayIpAddress,omitempty"`

	// Local network site Address space
	LocalNetworkAddressSpace *AddressSpace `json:"localNetworkAddressSpace,omitempty"`

	// Gets or sets Provisioning state of the LocalNetworkGateway resource Updating/Deleting/Failed
	ProvisioningState string `json:"provisioningState,omitempty"`

	// Gets or sets resource guid property of the LocalNetworkGateway resource
	ResourceGUID string `json:"resourceGuid,omitempty"`
}

// Validate validates this local network gateway properties format
func (m *LocalNetworkGatewayPropertiesFormat) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBgpSettings(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateLocalNetworkAddressSpace(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LocalNetworkGatewayPropertiesFormat) validateBgpSettings(formats strfmt.Registry) error {

	if swag.IsZero(m.BgpSettings) { // not required
		return nil
	}

	if m.BgpSettings != nil {

		if err := m.BgpSettings.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *LocalNetworkGatewayPropertiesFormat) validateLocalNetworkAddressSpace(formats strfmt.Registry) error {

	if swag.IsZero(m.LocalNetworkAddressSpace) { // not required
		return nil
	}

	if m.LocalNetworkAddressSpace != nil {

		if err := m.LocalNetworkAddressSpace.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
