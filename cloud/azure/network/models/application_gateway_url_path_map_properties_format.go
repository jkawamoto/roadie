package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// ApplicationGatewayURLPathMapPropertiesFormat Properties of probe of application gateway
// swagger:model ApplicationGatewayUrlPathMapPropertiesFormat
type ApplicationGatewayURLPathMapPropertiesFormat struct {

	// Gets or sets default backend address pool resource of URL path map
	DefaultBackendAddressPool *SubResource `json:"defaultBackendAddressPool,omitempty"`

	// Gets or sets default backend http settings resource of URL path map
	DefaultBackendHTTPSettings *SubResource `json:"defaultBackendHttpSettings,omitempty"`

	// Gets or sets path rule of URL path map resource
	PathRules []*ApplicationGatewayPathRule `json:"pathRules"`

	// Gets or sets Provisioning state of the backend http settings resource Updating/Deleting/Failed
	ProvisioningState string `json:"provisioningState,omitempty"`
}

// Validate validates this application gateway Url path map properties format
func (m *ApplicationGatewayURLPathMapPropertiesFormat) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDefaultBackendAddressPool(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateDefaultBackendHTTPSettings(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePathRules(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ApplicationGatewayURLPathMapPropertiesFormat) validateDefaultBackendAddressPool(formats strfmt.Registry) error {

	if swag.IsZero(m.DefaultBackendAddressPool) { // not required
		return nil
	}

	if m.DefaultBackendAddressPool != nil {

		if err := m.DefaultBackendAddressPool.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *ApplicationGatewayURLPathMapPropertiesFormat) validateDefaultBackendHTTPSettings(formats strfmt.Registry) error {

	if swag.IsZero(m.DefaultBackendHTTPSettings) { // not required
		return nil
	}

	if m.DefaultBackendHTTPSettings != nil {

		if err := m.DefaultBackendHTTPSettings.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *ApplicationGatewayURLPathMapPropertiesFormat) validatePathRules(formats strfmt.Registry) error {

	if swag.IsZero(m.PathRules) { // not required
		return nil
	}

	for i := 0; i < len(m.PathRules); i++ {

		if swag.IsZero(m.PathRules[i]) { // not required
			continue
		}

		if m.PathRules[i] != nil {

			if err := m.PathRules[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}
