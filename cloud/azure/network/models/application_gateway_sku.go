package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ApplicationGatewaySku SKU of application gateway
// swagger:model ApplicationGatewaySku
type ApplicationGatewaySku struct {

	// Gets or sets capacity (instance count) of application gateway
	Capacity int32 `json:"capacity,omitempty"`

	// Gets or sets name of application gateway SKU
	Name string `json:"name,omitempty"`

	// Gets or sets tier of application gateway
	Tier string `json:"tier,omitempty"`
}

// Validate validates this application gateway sku
func (m *ApplicationGatewaySku) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTier(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var applicationGatewaySkuTypeNamePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Standard_Small","Standard_Medium","Standard_Large"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		applicationGatewaySkuTypeNamePropEnum = append(applicationGatewaySkuTypeNamePropEnum, v)
	}
}

const (
	// ApplicationGatewaySkuNameStandardSmall captures enum value "Standard_Small"
	ApplicationGatewaySkuNameStandardSmall string = "Standard_Small"
	// ApplicationGatewaySkuNameStandardMedium captures enum value "Standard_Medium"
	ApplicationGatewaySkuNameStandardMedium string = "Standard_Medium"
	// ApplicationGatewaySkuNameStandardLarge captures enum value "Standard_Large"
	ApplicationGatewaySkuNameStandardLarge string = "Standard_Large"
)

// prop value enum
func (m *ApplicationGatewaySku) validateNameEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, applicationGatewaySkuTypeNamePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ApplicationGatewaySku) validateName(formats strfmt.Registry) error {

	if swag.IsZero(m.Name) { // not required
		return nil
	}

	// value enum
	if err := m.validateNameEnum("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

var applicationGatewaySkuTypeTierPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Standard"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		applicationGatewaySkuTypeTierPropEnum = append(applicationGatewaySkuTypeTierPropEnum, v)
	}
}

const (
	// ApplicationGatewaySkuTierStandard captures enum value "Standard"
	ApplicationGatewaySkuTierStandard string = "Standard"
)

// prop value enum
func (m *ApplicationGatewaySku) validateTierEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, applicationGatewaySkuTypeTierPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ApplicationGatewaySku) validateTier(formats strfmt.Registry) error {

	if swag.IsZero(m.Tier) { // not required
		return nil
	}

	// value enum
	if err := m.validateTierEnum("tier", "body", m.Tier); err != nil {
		return err
	}

	return nil
}
