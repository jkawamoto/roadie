package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ApplicationGatewayRequestRoutingRulePropertiesFormat Properties of Request routing rule of application gateway
// swagger:model ApplicationGatewayRequestRoutingRulePropertiesFormat
type ApplicationGatewayRequestRoutingRulePropertiesFormat struct {

	// Gets or sets backend address pool resource of application gateway
	BackendAddressPool *SubResource `json:"backendAddressPool,omitempty"`

	// Gets or sets frontend port resource of application gateway
	BackendHTTPSettings *SubResource `json:"backendHttpSettings,omitempty"`

	// Gets or sets http listener resource of application gateway
	HTTPListener *SubResource `json:"httpListener,omitempty"`

	// Gets or sets Provisioning state of the request routing rule resource Updating/Deleting/Failed
	ProvisioningState string `json:"provisioningState,omitempty"`

	// Gets or sets the rule type
	RuleType string `json:"ruleType,omitempty"`

	// Gets or sets url path map resource of application gateway
	URLPathMap *SubResource `json:"urlPathMap,omitempty"`
}

// Validate validates this application gateway request routing rule properties format
func (m *ApplicationGatewayRequestRoutingRulePropertiesFormat) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBackendAddressPool(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateBackendHTTPSettings(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateHTTPListener(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRuleType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateURLPathMap(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ApplicationGatewayRequestRoutingRulePropertiesFormat) validateBackendAddressPool(formats strfmt.Registry) error {

	if swag.IsZero(m.BackendAddressPool) { // not required
		return nil
	}

	if m.BackendAddressPool != nil {

		if err := m.BackendAddressPool.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *ApplicationGatewayRequestRoutingRulePropertiesFormat) validateBackendHTTPSettings(formats strfmt.Registry) error {

	if swag.IsZero(m.BackendHTTPSettings) { // not required
		return nil
	}

	if m.BackendHTTPSettings != nil {

		if err := m.BackendHTTPSettings.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *ApplicationGatewayRequestRoutingRulePropertiesFormat) validateHTTPListener(formats strfmt.Registry) error {

	if swag.IsZero(m.HTTPListener) { // not required
		return nil
	}

	if m.HTTPListener != nil {

		if err := m.HTTPListener.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

var applicationGatewayRequestRoutingRulePropertiesFormatTypeRuleTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Basic","PathBasedRouting"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		applicationGatewayRequestRoutingRulePropertiesFormatTypeRuleTypePropEnum = append(applicationGatewayRequestRoutingRulePropertiesFormatTypeRuleTypePropEnum, v)
	}
}

const (
	// ApplicationGatewayRequestRoutingRulePropertiesFormatRuleTypeBasic captures enum value "Basic"
	ApplicationGatewayRequestRoutingRulePropertiesFormatRuleTypeBasic string = "Basic"
	// ApplicationGatewayRequestRoutingRulePropertiesFormatRuleTypePathBasedRouting captures enum value "PathBasedRouting"
	ApplicationGatewayRequestRoutingRulePropertiesFormatRuleTypePathBasedRouting string = "PathBasedRouting"
)

// prop value enum
func (m *ApplicationGatewayRequestRoutingRulePropertiesFormat) validateRuleTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, applicationGatewayRequestRoutingRulePropertiesFormatTypeRuleTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ApplicationGatewayRequestRoutingRulePropertiesFormat) validateRuleType(formats strfmt.Registry) error {

	if swag.IsZero(m.RuleType) { // not required
		return nil
	}

	// value enum
	if err := m.validateRuleTypeEnum("ruleType", "body", m.RuleType); err != nil {
		return err
	}

	return nil
}

func (m *ApplicationGatewayRequestRoutingRulePropertiesFormat) validateURLPathMap(formats strfmt.Registry) error {

	if swag.IsZero(m.URLPathMap) { // not required
		return nil
	}

	if m.URLPathMap != nil {

		if err := m.URLPathMap.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
