package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ExpressRouteCircuitSku Contains sku in an ExpressRouteCircuit
// swagger:model ExpressRouteCircuitSku
type ExpressRouteCircuitSku struct {

	// Gets or sets family of the sku.
	Family string `json:"family,omitempty"`

	// Gets or sets name of the sku.
	Name string `json:"name,omitempty"`

	// Gets or sets tier of the sku.
	Tier string `json:"tier,omitempty"`
}

// Validate validates this express route circuit sku
func (m *ExpressRouteCircuitSku) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFamily(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTier(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var expressRouteCircuitSkuTypeFamilyPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["UnlimitedData","MeteredData"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		expressRouteCircuitSkuTypeFamilyPropEnum = append(expressRouteCircuitSkuTypeFamilyPropEnum, v)
	}
}

const (
	// ExpressRouteCircuitSkuFamilyUnlimitedData captures enum value "UnlimitedData"
	ExpressRouteCircuitSkuFamilyUnlimitedData string = "UnlimitedData"
	// ExpressRouteCircuitSkuFamilyMeteredData captures enum value "MeteredData"
	ExpressRouteCircuitSkuFamilyMeteredData string = "MeteredData"
)

// prop value enum
func (m *ExpressRouteCircuitSku) validateFamilyEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, expressRouteCircuitSkuTypeFamilyPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ExpressRouteCircuitSku) validateFamily(formats strfmt.Registry) error {

	if swag.IsZero(m.Family) { // not required
		return nil
	}

	// value enum
	if err := m.validateFamilyEnum("family", "body", m.Family); err != nil {
		return err
	}

	return nil
}

var expressRouteCircuitSkuTypeTierPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Standard","Premium"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		expressRouteCircuitSkuTypeTierPropEnum = append(expressRouteCircuitSkuTypeTierPropEnum, v)
	}
}

const (
	// ExpressRouteCircuitSkuTierStandard captures enum value "Standard"
	ExpressRouteCircuitSkuTierStandard string = "Standard"
	// ExpressRouteCircuitSkuTierPremium captures enum value "Premium"
	ExpressRouteCircuitSkuTierPremium string = "Premium"
)

// prop value enum
func (m *ExpressRouteCircuitSku) validateTierEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, expressRouteCircuitSkuTypeTierPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ExpressRouteCircuitSku) validateTier(formats strfmt.Registry) error {

	if swag.IsZero(m.Tier) { // not required
		return nil
	}

	// value enum
	if err := m.validateTierEnum("tier", "body", m.Tier); err != nil {
		return err
	}

	return nil
}
