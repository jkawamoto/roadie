package security_rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/jkawamoto/roadie/cloud/azure/network/models"
)

// NewSecurityRulesCreateOrUpdateParams creates a new SecurityRulesCreateOrUpdateParams object
// with the default values initialized.
func NewSecurityRulesCreateOrUpdateParams() *SecurityRulesCreateOrUpdateParams {
	var ()
	return &SecurityRulesCreateOrUpdateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSecurityRulesCreateOrUpdateParamsWithTimeout creates a new SecurityRulesCreateOrUpdateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSecurityRulesCreateOrUpdateParamsWithTimeout(timeout time.Duration) *SecurityRulesCreateOrUpdateParams {
	var ()
	return &SecurityRulesCreateOrUpdateParams{

		timeout: timeout,
	}
}

// NewSecurityRulesCreateOrUpdateParamsWithContext creates a new SecurityRulesCreateOrUpdateParams object
// with the default values initialized, and the ability to set a context for a request
func NewSecurityRulesCreateOrUpdateParamsWithContext(ctx context.Context) *SecurityRulesCreateOrUpdateParams {
	var ()
	return &SecurityRulesCreateOrUpdateParams{

		Context: ctx,
	}
}

/*SecurityRulesCreateOrUpdateParams contains all the parameters to send to the API endpoint
for the security rules create or update operation typically these are written to a http.Request
*/
type SecurityRulesCreateOrUpdateParams struct {

	/*APIVersion
	  Client Api Version.

	*/
	APIVersion string
	/*NetworkSecurityGroupName
	  The name of the network security group.

	*/
	NetworkSecurityGroupName string
	/*ResourceGroupName
	  The name of the resource group.

	*/
	ResourceGroupName string
	/*SecurityRuleName
	  The name of the security rule.

	*/
	SecurityRuleName string
	/*SecurityRuleParameters
	  Parameters supplied to the create/update network security rule operation

	*/
	SecurityRuleParameters *models.SecurityRule
	/*SubscriptionID
	  Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.

	*/
	SubscriptionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the security rules create or update params
func (o *SecurityRulesCreateOrUpdateParams) WithTimeout(timeout time.Duration) *SecurityRulesCreateOrUpdateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the security rules create or update params
func (o *SecurityRulesCreateOrUpdateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the security rules create or update params
func (o *SecurityRulesCreateOrUpdateParams) WithContext(ctx context.Context) *SecurityRulesCreateOrUpdateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the security rules create or update params
func (o *SecurityRulesCreateOrUpdateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithAPIVersion adds the aPIVersion to the security rules create or update params
func (o *SecurityRulesCreateOrUpdateParams) WithAPIVersion(aPIVersion string) *SecurityRulesCreateOrUpdateParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the security rules create or update params
func (o *SecurityRulesCreateOrUpdateParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithNetworkSecurityGroupName adds the networkSecurityGroupName to the security rules create or update params
func (o *SecurityRulesCreateOrUpdateParams) WithNetworkSecurityGroupName(networkSecurityGroupName string) *SecurityRulesCreateOrUpdateParams {
	o.SetNetworkSecurityGroupName(networkSecurityGroupName)
	return o
}

// SetNetworkSecurityGroupName adds the networkSecurityGroupName to the security rules create or update params
func (o *SecurityRulesCreateOrUpdateParams) SetNetworkSecurityGroupName(networkSecurityGroupName string) {
	o.NetworkSecurityGroupName = networkSecurityGroupName
}

// WithResourceGroupName adds the resourceGroupName to the security rules create or update params
func (o *SecurityRulesCreateOrUpdateParams) WithResourceGroupName(resourceGroupName string) *SecurityRulesCreateOrUpdateParams {
	o.SetResourceGroupName(resourceGroupName)
	return o
}

// SetResourceGroupName adds the resourceGroupName to the security rules create or update params
func (o *SecurityRulesCreateOrUpdateParams) SetResourceGroupName(resourceGroupName string) {
	o.ResourceGroupName = resourceGroupName
}

// WithSecurityRuleName adds the securityRuleName to the security rules create or update params
func (o *SecurityRulesCreateOrUpdateParams) WithSecurityRuleName(securityRuleName string) *SecurityRulesCreateOrUpdateParams {
	o.SetSecurityRuleName(securityRuleName)
	return o
}

// SetSecurityRuleName adds the securityRuleName to the security rules create or update params
func (o *SecurityRulesCreateOrUpdateParams) SetSecurityRuleName(securityRuleName string) {
	o.SecurityRuleName = securityRuleName
}

// WithSecurityRuleParameters adds the securityRuleParameters to the security rules create or update params
func (o *SecurityRulesCreateOrUpdateParams) WithSecurityRuleParameters(securityRuleParameters *models.SecurityRule) *SecurityRulesCreateOrUpdateParams {
	o.SetSecurityRuleParameters(securityRuleParameters)
	return o
}

// SetSecurityRuleParameters adds the securityRuleParameters to the security rules create or update params
func (o *SecurityRulesCreateOrUpdateParams) SetSecurityRuleParameters(securityRuleParameters *models.SecurityRule) {
	o.SecurityRuleParameters = securityRuleParameters
}

// WithSubscriptionID adds the subscriptionID to the security rules create or update params
func (o *SecurityRulesCreateOrUpdateParams) WithSubscriptionID(subscriptionID string) *SecurityRulesCreateOrUpdateParams {
	o.SetSubscriptionID(subscriptionID)
	return o
}

// SetSubscriptionID adds the subscriptionId to the security rules create or update params
func (o *SecurityRulesCreateOrUpdateParams) SetSubscriptionID(subscriptionID string) {
	o.SubscriptionID = subscriptionID
}

// WriteToRequest writes these params to a swagger request
func (o *SecurityRulesCreateOrUpdateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// query param api-version
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if qAPIVersion != "" {
		if err := r.SetQueryParam("api-version", qAPIVersion); err != nil {
			return err
		}
	}

	// path param networkSecurityGroupName
	if err := r.SetPathParam("networkSecurityGroupName", o.NetworkSecurityGroupName); err != nil {
		return err
	}

	// path param resourceGroupName
	if err := r.SetPathParam("resourceGroupName", o.ResourceGroupName); err != nil {
		return err
	}

	// path param securityRuleName
	if err := r.SetPathParam("securityRuleName", o.SecurityRuleName); err != nil {
		return err
	}

	if o.SecurityRuleParameters == nil {
		o.SecurityRuleParameters = new(models.SecurityRule)
	}

	if err := r.SetBodyParam(o.SecurityRuleParameters); err != nil {
		return err
	}

	// path param subscriptionId
	if err := r.SetPathParam("subscriptionId", o.SubscriptionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
