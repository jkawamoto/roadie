package express_route_circuit_routes_table

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new express route circuit routes table API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for express route circuit routes table API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
ExpressRouteCircuitsListRoutesTable The ListRoutesTable from ExpressRouteCircuit opertion retrieves the currently advertised routes table associated with the ExpressRouteCircuits in a resource group.
*/
func (a *Client) ExpressRouteCircuitsListRoutesTable(params *ExpressRouteCircuitsListRoutesTableParams, authInfo runtime.ClientAuthInfoWriter) (*ExpressRouteCircuitsListRoutesTableOK, *ExpressRouteCircuitsListRoutesTableAccepted, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewExpressRouteCircuitsListRoutesTableParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "ExpressRouteCircuits_ListRoutesTable",
		Method:             "POST",
		PathPattern:        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTables/{devicePath}",
		ProducesMediaTypes: []string{"application/json", "text/json"},
		ConsumesMediaTypes: []string{"application/json", "text/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ExpressRouteCircuitsListRoutesTableReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *ExpressRouteCircuitsListRoutesTableOK:
		return value, nil, nil
	case *ExpressRouteCircuitsListRoutesTableAccepted:
		return nil, value, nil
	}
	return nil, nil, nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
