package express_route_circuit_routes_table

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/jkawamoto/roadie/cloud/azure/network/models"
)

// ExpressRouteCircuitsListRoutesTableReader is a Reader for the ExpressRouteCircuitsListRoutesTable structure.
type ExpressRouteCircuitsListRoutesTableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExpressRouteCircuitsListRoutesTableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewExpressRouteCircuitsListRoutesTableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewExpressRouteCircuitsListRoutesTableAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewExpressRouteCircuitsListRoutesTableOK creates a ExpressRouteCircuitsListRoutesTableOK with default headers values
func NewExpressRouteCircuitsListRoutesTableOK() *ExpressRouteCircuitsListRoutesTableOK {
	return &ExpressRouteCircuitsListRoutesTableOK{}
}

/*ExpressRouteCircuitsListRoutesTableOK handles this case with default header values.

ExpressRouteCircuitsListRoutesTableOK express route circuits list routes table o k
*/
type ExpressRouteCircuitsListRoutesTableOK struct {
	Payload *models.ExpressRouteCircuitsRoutesTableListResult
}

func (o *ExpressRouteCircuitsListRoutesTableOK) Error() string {
	return fmt.Sprintf("[POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTables/{devicePath}][%d] expressRouteCircuitsListRoutesTableOK  %+v", 200, o.Payload)
}

func (o *ExpressRouteCircuitsListRoutesTableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExpressRouteCircuitsRoutesTableListResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExpressRouteCircuitsListRoutesTableAccepted creates a ExpressRouteCircuitsListRoutesTableAccepted with default headers values
func NewExpressRouteCircuitsListRoutesTableAccepted() *ExpressRouteCircuitsListRoutesTableAccepted {
	return &ExpressRouteCircuitsListRoutesTableAccepted{}
}

/*ExpressRouteCircuitsListRoutesTableAccepted handles this case with default header values.

ExpressRouteCircuitsListRoutesTableAccepted express route circuits list routes table accepted
*/
type ExpressRouteCircuitsListRoutesTableAccepted struct {
}

func (o *ExpressRouteCircuitsListRoutesTableAccepted) Error() string {
	return fmt.Sprintf("[POST /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/peerings/{peeringName}/routeTables/{devicePath}][%d] expressRouteCircuitsListRoutesTableAccepted ", 202)
}

func (o *ExpressRouteCircuitsListRoutesTableAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
