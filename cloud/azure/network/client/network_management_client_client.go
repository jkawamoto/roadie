package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/jkawamoto/roadie/cloud/azure/network/client/application_gateways"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/express_route_circuit_arp_table"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/express_route_circuit_authorizations"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/express_route_circuit_peerings"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/express_route_circuit_routes_table"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/express_route_circuit_routes_table_summary"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/express_route_circuit_stats"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/express_route_circuits"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/express_route_service_providers"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/load_balancers"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/local_network_gateways"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/network_interfaces"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/network_security_groups"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/operations"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/public_ip_addresses"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/route_tables"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/routes"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/security_rules"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/subnets"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/usages"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/virtual_network_gateway_connections"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/virtual_network_gateways"
	"github.com/jkawamoto/roadie/cloud/azure/network/client/virtual_networks"
)

// Default network management client HTTP client.
var Default = NewHTTPClient(nil)

// NewHTTPClient creates a new network management client HTTP client.
func NewHTTPClient(formats strfmt.Registry) *NetworkManagementClient {
	if formats == nil {
		formats = strfmt.Default
	}
	transport := httptransport.New("management.azure.com", "/", []string{"https"})
	return New(transport, formats)
}

// New creates a new network management client client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *NetworkManagementClient {
	cli := new(NetworkManagementClient)
	cli.Transport = transport

	cli.ApplicationGateways = application_gateways.New(transport, formats)

	cli.ExpressRouteCircuitArpTable = express_route_circuit_arp_table.New(transport, formats)

	cli.ExpressRouteCircuitAuthorizations = express_route_circuit_authorizations.New(transport, formats)

	cli.ExpressRouteCircuitPeerings = express_route_circuit_peerings.New(transport, formats)

	cli.ExpressRouteCircuitRoutesTable = express_route_circuit_routes_table.New(transport, formats)

	cli.ExpressRouteCircuitRoutesTableSummary = express_route_circuit_routes_table_summary.New(transport, formats)

	cli.ExpressRouteCircuitStats = express_route_circuit_stats.New(transport, formats)

	cli.ExpressRouteCircuits = express_route_circuits.New(transport, formats)

	cli.ExpressRouteServiceProviders = express_route_service_providers.New(transport, formats)

	cli.LoadBalancers = load_balancers.New(transport, formats)

	cli.LocalNetworkGateways = local_network_gateways.New(transport, formats)

	cli.NetworkInterfaces = network_interfaces.New(transport, formats)

	cli.NetworkSecurityGroups = network_security_groups.New(transport, formats)

	cli.Operations = operations.New(transport, formats)

	cli.PublicIPAddresses = public_ip_addresses.New(transport, formats)

	cli.RouteTables = route_tables.New(transport, formats)

	cli.Routes = routes.New(transport, formats)

	cli.SecurityRules = security_rules.New(transport, formats)

	cli.Subnets = subnets.New(transport, formats)

	cli.Usages = usages.New(transport, formats)

	cli.VirtualNetworkGatewayConnections = virtual_network_gateway_connections.New(transport, formats)

	cli.VirtualNetworkGateways = virtual_network_gateways.New(transport, formats)

	cli.VirtualNetworks = virtual_networks.New(transport, formats)

	return cli
}

// NetworkManagementClient is a client for network management client
type NetworkManagementClient struct {
	ApplicationGateways *application_gateways.Client

	ExpressRouteCircuitArpTable *express_route_circuit_arp_table.Client

	ExpressRouteCircuitAuthorizations *express_route_circuit_authorizations.Client

	ExpressRouteCircuitPeerings *express_route_circuit_peerings.Client

	ExpressRouteCircuitRoutesTable *express_route_circuit_routes_table.Client

	ExpressRouteCircuitRoutesTableSummary *express_route_circuit_routes_table_summary.Client

	ExpressRouteCircuitStats *express_route_circuit_stats.Client

	ExpressRouteCircuits *express_route_circuits.Client

	ExpressRouteServiceProviders *express_route_service_providers.Client

	LoadBalancers *load_balancers.Client

	LocalNetworkGateways *local_network_gateways.Client

	NetworkInterfaces *network_interfaces.Client

	NetworkSecurityGroups *network_security_groups.Client

	Operations *operations.Client

	PublicIPAddresses *public_ip_addresses.Client

	RouteTables *route_tables.Client

	Routes *routes.Client

	SecurityRules *security_rules.Client

	Subnets *subnets.Client

	Usages *usages.Client

	VirtualNetworkGatewayConnections *virtual_network_gateway_connections.Client

	VirtualNetworkGateways *virtual_network_gateways.Client

	VirtualNetworks *virtual_networks.Client

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *NetworkManagementClient) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport

	c.ApplicationGateways.SetTransport(transport)

	c.ExpressRouteCircuitArpTable.SetTransport(transport)

	c.ExpressRouteCircuitAuthorizations.SetTransport(transport)

	c.ExpressRouteCircuitPeerings.SetTransport(transport)

	c.ExpressRouteCircuitRoutesTable.SetTransport(transport)

	c.ExpressRouteCircuitRoutesTableSummary.SetTransport(transport)

	c.ExpressRouteCircuitStats.SetTransport(transport)

	c.ExpressRouteCircuits.SetTransport(transport)

	c.ExpressRouteServiceProviders.SetTransport(transport)

	c.LoadBalancers.SetTransport(transport)

	c.LocalNetworkGateways.SetTransport(transport)

	c.NetworkInterfaces.SetTransport(transport)

	c.NetworkSecurityGroups.SetTransport(transport)

	c.Operations.SetTransport(transport)

	c.PublicIPAddresses.SetTransport(transport)

	c.RouteTables.SetTransport(transport)

	c.Routes.SetTransport(transport)

	c.SecurityRules.SetTransport(transport)

	c.Subnets.SetTransport(transport)

	c.Usages.SetTransport(transport)

	c.VirtualNetworkGatewayConnections.SetTransport(transport)

	c.VirtualNetworkGateways.SetTransport(transport)

	c.VirtualNetworks.SetTransport(transport)

}
