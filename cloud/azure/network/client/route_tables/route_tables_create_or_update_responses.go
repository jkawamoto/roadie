package route_tables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/jkawamoto/roadie/cloud/azure/network/models"
)

// RouteTablesCreateOrUpdateReader is a Reader for the RouteTablesCreateOrUpdate structure.
type RouteTablesCreateOrUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RouteTablesCreateOrUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRouteTablesCreateOrUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewRouteTablesCreateOrUpdateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRouteTablesCreateOrUpdateOK creates a RouteTablesCreateOrUpdateOK with default headers values
func NewRouteTablesCreateOrUpdateOK() *RouteTablesCreateOrUpdateOK {
	return &RouteTablesCreateOrUpdateOK{}
}

/*RouteTablesCreateOrUpdateOK handles this case with default header values.

RouteTablesCreateOrUpdateOK route tables create or update o k
*/
type RouteTablesCreateOrUpdateOK struct {
	Payload *models.RouteTable
}

func (o *RouteTablesCreateOrUpdateOK) Error() string {
	return fmt.Sprintf("[PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}][%d] routeTablesCreateOrUpdateOK  %+v", 200, o.Payload)
}

func (o *RouteTablesCreateOrUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RouteTable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRouteTablesCreateOrUpdateCreated creates a RouteTablesCreateOrUpdateCreated with default headers values
func NewRouteTablesCreateOrUpdateCreated() *RouteTablesCreateOrUpdateCreated {
	return &RouteTablesCreateOrUpdateCreated{}
}

/*RouteTablesCreateOrUpdateCreated handles this case with default header values.

RouteTablesCreateOrUpdateCreated route tables create or update created
*/
type RouteTablesCreateOrUpdateCreated struct {
	Payload *models.RouteTable
}

func (o *RouteTablesCreateOrUpdateCreated) Error() string {
	return fmt.Sprintf("[PUT /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}][%d] routeTablesCreateOrUpdateCreated  %+v", 201, o.Payload)
}

func (o *RouteTablesCreateOrUpdateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RouteTable)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
