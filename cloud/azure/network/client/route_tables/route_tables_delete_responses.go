package route_tables

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// RouteTablesDeleteReader is a Reader for the RouteTablesDelete structure.
type RouteTablesDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RouteTablesDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRouteTablesDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewRouteTablesDeleteAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewRouteTablesDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRouteTablesDeleteOK creates a RouteTablesDeleteOK with default headers values
func NewRouteTablesDeleteOK() *RouteTablesDeleteOK {
	return &RouteTablesDeleteOK{}
}

/*RouteTablesDeleteOK handles this case with default header values.

RouteTablesDeleteOK route tables delete o k
*/
type RouteTablesDeleteOK struct {
}

func (o *RouteTablesDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}][%d] routeTablesDeleteOK ", 200)
}

func (o *RouteTablesDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRouteTablesDeleteAccepted creates a RouteTablesDeleteAccepted with default headers values
func NewRouteTablesDeleteAccepted() *RouteTablesDeleteAccepted {
	return &RouteTablesDeleteAccepted{}
}

/*RouteTablesDeleteAccepted handles this case with default header values.

RouteTablesDeleteAccepted route tables delete accepted
*/
type RouteTablesDeleteAccepted struct {
}

func (o *RouteTablesDeleteAccepted) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}][%d] routeTablesDeleteAccepted ", 202)
}

func (o *RouteTablesDeleteAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRouteTablesDeleteNoContent creates a RouteTablesDeleteNoContent with default headers values
func NewRouteTablesDeleteNoContent() *RouteTablesDeleteNoContent {
	return &RouteTablesDeleteNoContent{}
}

/*RouteTablesDeleteNoContent handles this case with default header values.

RouteTablesDeleteNoContent route tables delete no content
*/
type RouteTablesDeleteNoContent struct {
}

func (o *RouteTablesDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}][%d] routeTablesDeleteNoContent ", 204)
}

func (o *RouteTablesDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
