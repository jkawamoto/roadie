package subnets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// SubnetsDeleteReader is a Reader for the SubnetsDelete structure.
type SubnetsDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SubnetsDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSubnetsDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewSubnetsDeleteAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewSubnetsDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSubnetsDeleteOK creates a SubnetsDeleteOK with default headers values
func NewSubnetsDeleteOK() *SubnetsDeleteOK {
	return &SubnetsDeleteOK{}
}

/*SubnetsDeleteOK handles this case with default header values.

SubnetsDeleteOK subnets delete o k
*/
type SubnetsDeleteOK struct {
}

func (o *SubnetsDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}][%d] subnetsDeleteOK ", 200)
}

func (o *SubnetsDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubnetsDeleteAccepted creates a SubnetsDeleteAccepted with default headers values
func NewSubnetsDeleteAccepted() *SubnetsDeleteAccepted {
	return &SubnetsDeleteAccepted{}
}

/*SubnetsDeleteAccepted handles this case with default header values.

SubnetsDeleteAccepted subnets delete accepted
*/
type SubnetsDeleteAccepted struct {
}

func (o *SubnetsDeleteAccepted) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}][%d] subnetsDeleteAccepted ", 202)
}

func (o *SubnetsDeleteAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSubnetsDeleteNoContent creates a SubnetsDeleteNoContent with default headers values
func NewSubnetsDeleteNoContent() *SubnetsDeleteNoContent {
	return &SubnetsDeleteNoContent{}
}

/*SubnetsDeleteNoContent handles this case with default header values.

SubnetsDeleteNoContent subnets delete no content
*/
type SubnetsDeleteNoContent struct {
}

func (o *SubnetsDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}][%d] subnetsDeleteNoContent ", 204)
}

func (o *SubnetsDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
