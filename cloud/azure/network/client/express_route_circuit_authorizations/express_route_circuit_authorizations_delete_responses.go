package express_route_circuit_authorizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ExpressRouteCircuitAuthorizationsDeleteReader is a Reader for the ExpressRouteCircuitAuthorizationsDelete structure.
type ExpressRouteCircuitAuthorizationsDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExpressRouteCircuitAuthorizationsDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewExpressRouteCircuitAuthorizationsDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewExpressRouteCircuitAuthorizationsDeleteAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewExpressRouteCircuitAuthorizationsDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewExpressRouteCircuitAuthorizationsDeleteOK creates a ExpressRouteCircuitAuthorizationsDeleteOK with default headers values
func NewExpressRouteCircuitAuthorizationsDeleteOK() *ExpressRouteCircuitAuthorizationsDeleteOK {
	return &ExpressRouteCircuitAuthorizationsDeleteOK{}
}

/*ExpressRouteCircuitAuthorizationsDeleteOK handles this case with default header values.

ExpressRouteCircuitAuthorizationsDeleteOK express route circuit authorizations delete o k
*/
type ExpressRouteCircuitAuthorizationsDeleteOK struct {
}

func (o *ExpressRouteCircuitAuthorizationsDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}][%d] expressRouteCircuitAuthorizationsDeleteOK ", 200)
}

func (o *ExpressRouteCircuitAuthorizationsDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExpressRouteCircuitAuthorizationsDeleteAccepted creates a ExpressRouteCircuitAuthorizationsDeleteAccepted with default headers values
func NewExpressRouteCircuitAuthorizationsDeleteAccepted() *ExpressRouteCircuitAuthorizationsDeleteAccepted {
	return &ExpressRouteCircuitAuthorizationsDeleteAccepted{}
}

/*ExpressRouteCircuitAuthorizationsDeleteAccepted handles this case with default header values.

ExpressRouteCircuitAuthorizationsDeleteAccepted express route circuit authorizations delete accepted
*/
type ExpressRouteCircuitAuthorizationsDeleteAccepted struct {
}

func (o *ExpressRouteCircuitAuthorizationsDeleteAccepted) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}][%d] expressRouteCircuitAuthorizationsDeleteAccepted ", 202)
}

func (o *ExpressRouteCircuitAuthorizationsDeleteAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExpressRouteCircuitAuthorizationsDeleteNoContent creates a ExpressRouteCircuitAuthorizationsDeleteNoContent with default headers values
func NewExpressRouteCircuitAuthorizationsDeleteNoContent() *ExpressRouteCircuitAuthorizationsDeleteNoContent {
	return &ExpressRouteCircuitAuthorizationsDeleteNoContent{}
}

/*ExpressRouteCircuitAuthorizationsDeleteNoContent handles this case with default header values.

ExpressRouteCircuitAuthorizationsDeleteNoContent express route circuit authorizations delete no content
*/
type ExpressRouteCircuitAuthorizationsDeleteNoContent struct {
}

func (o *ExpressRouteCircuitAuthorizationsDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}/authorizations/{authorizationName}][%d] expressRouteCircuitAuthorizationsDeleteNoContent ", 204)
}

func (o *ExpressRouteCircuitAuthorizationsDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
