package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// APIError Api error.
// swagger:model ApiError
type APIError struct {

	// The error code.
	Code string `json:"code,omitempty"`

	// The Api error details
	Details []*APIErrorBase `json:"details"`

	// The Api inner error
	Innererror *InnerError `json:"innererror,omitempty"`

	// The error message.
	Message string `json:"message,omitempty"`

	// The target of the particular error.
	Target string `json:"target,omitempty"`
}

// Validate validates this Api error
func (m *APIError) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDetails(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateInnererror(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APIError) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(m.Details) { // not required
		return nil
	}

	for i := 0; i < len(m.Details); i++ {

		if swag.IsZero(m.Details[i]) { // not required
			continue
		}

		if m.Details[i] != nil {

			if err := m.Details[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *APIError) validateInnererror(formats strfmt.Registry) error {

	if swag.IsZero(m.Innererror) { // not required
		return nil
	}

	if m.Innererror != nil {

		if err := m.Innererror.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
