package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// VirtualMachineScaleSetSku Describes an available virtual machine scale set sku.
// swagger:model VirtualMachineScaleSetSku
type VirtualMachineScaleSetSku struct {

	// Available scaling information.
	// Read Only: true
	Capacity *VirtualMachineScaleSetSkuCapacity `json:"capacity,omitempty"`

	// The type of resource the sku applies to.
	// Read Only: true
	ResourceType string `json:"resourceType,omitempty"`

	// The Sku.
	// Read Only: true
	Sku *Sku `json:"sku,omitempty"`
}

// Validate validates this virtual machine scale set sku
func (m *VirtualMachineScaleSetSku) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCapacity(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateSku(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VirtualMachineScaleSetSku) validateCapacity(formats strfmt.Registry) error {

	if swag.IsZero(m.Capacity) { // not required
		return nil
	}

	if m.Capacity != nil {

		if err := m.Capacity.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *VirtualMachineScaleSetSku) validateSku(formats strfmt.Registry) error {

	if swag.IsZero(m.Sku) { // not required
		return nil
	}

	if m.Sku != nil {

		if err := m.Sku.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
