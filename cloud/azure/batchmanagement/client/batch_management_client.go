package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/jkawamoto/roadie/cloud/azure/batchmanagement/client/application"
	"github.com/jkawamoto/roadie/cloud/azure/batchmanagement/client/application_package"
	"github.com/jkawamoto/roadie/cloud/azure/batchmanagement/client/batch_account"
	"github.com/jkawamoto/roadie/cloud/azure/batchmanagement/client/location"
)

// Default batch management HTTP client.
var Default = NewHTTPClient(nil)

// NewHTTPClient creates a new batch management HTTP client.
func NewHTTPClient(formats strfmt.Registry) *BatchManagement {
	if formats == nil {
		formats = strfmt.Default
	}
	transport := httptransport.New("management.azure.com", "/", []string{"https"})
	return New(transport, formats)
}

// New creates a new batch management client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *BatchManagement {
	cli := new(BatchManagement)
	cli.Transport = transport

	cli.Application = application.New(transport, formats)

	cli.ApplicationPackage = application_package.New(transport, formats)

	cli.BatchAccount = batch_account.New(transport, formats)

	cli.Location = location.New(transport, formats)

	return cli
}

// BatchManagement is a client for batch management
type BatchManagement struct {
	Application *application.Client

	ApplicationPackage *application_package.Client

	BatchAccount *batch_account.Client

	Location *location.Client

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *BatchManagement) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport

	c.Application.SetTransport(transport)

	c.ApplicationPackage.SetTransport(transport)

	c.BatchAccount.SetTransport(transport)

	c.Location.SetTransport(transport)

}
