package batch_account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/jkawamoto/roadie/cloud/azure/batchmanagement/models"
)

// BatchAccountDeleteReader is a Reader for the BatchAccountDelete structure.
type BatchAccountDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BatchAccountDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewBatchAccountDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewBatchAccountDeleteAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewBatchAccountDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewBatchAccountDeleteOK creates a BatchAccountDeleteOK with default headers values
func NewBatchAccountDeleteOK() *BatchAccountDeleteOK {
	return &BatchAccountDeleteOK{}
}

/*BatchAccountDeleteOK handles this case with default header values.

The operation was successful.
*/
type BatchAccountDeleteOK struct {
}

func (o *BatchAccountDeleteOK) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}][%d] batchAccountDeleteOK ", 200)
}

func (o *BatchAccountDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewBatchAccountDeleteAccepted creates a BatchAccountDeleteAccepted with default headers values
func NewBatchAccountDeleteAccepted() *BatchAccountDeleteAccepted {
	return &BatchAccountDeleteAccepted{}
}

/*BatchAccountDeleteAccepted handles this case with default header values.

The operation will be completed asynchronously.
*/
type BatchAccountDeleteAccepted struct {
	/*The URL of the resource used to check the status of the asynchronous operation.
	 */
	Location string
	/*Suggested delay to check the status of the asynchronous operation. The value is an integer that represents the seconds.
	 */
	RetryAfter int32
}

func (o *BatchAccountDeleteAccepted) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}][%d] batchAccountDeleteAccepted ", 202)
}

func (o *BatchAccountDeleteAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	// response header Retry-After
	retryAfter, err := swag.ConvertInt32(response.GetHeader("Retry-After"))
	if err != nil {
		return errors.InvalidType("Retry-After", "header", "int32", response.GetHeader("Retry-After"))
	}
	o.RetryAfter = retryAfter

	return nil
}

// NewBatchAccountDeleteDefault creates a BatchAccountDeleteDefault with default headers values
func NewBatchAccountDeleteDefault(code int) *BatchAccountDeleteDefault {
	return &BatchAccountDeleteDefault{
		_statusCode: code,
	}
}

/*BatchAccountDeleteDefault handles this case with default header values.

Error response describing why the operation failed.
*/
type BatchAccountDeleteDefault struct {
	_statusCode int

	Payload *models.CloudError
}

// Code gets the status code for the batch account delete default response
func (o *BatchAccountDeleteDefault) Code() int {
	return o._statusCode
}

func (o *BatchAccountDeleteDefault) Error() string {
	return fmt.Sprintf("[DELETE /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}][%d] BatchAccount_Delete default  %+v", o._statusCode, o.Payload)
}

func (o *BatchAccountDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CloudError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
