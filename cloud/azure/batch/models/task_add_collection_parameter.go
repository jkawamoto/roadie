package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// TaskAddCollectionParameter A collection of Azure Batch tasks to add.
// swagger:model TaskAddCollectionParameter
type TaskAddCollectionParameter struct {

	// The collection of tasks to add.
	// Required: true
	// Max Items: 100
	Value []*TaskAddParameter `json:"value"`
}

// Validate validates this task add collection parameter
func (m *TaskAddCollectionParameter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateValue(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TaskAddCollectionParameter) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", m.Value); err != nil {
		return err
	}

	iValueSize := int64(len(m.Value))

	if err := validate.MaxItems("value", "body", iValueSize, 100); err != nil {
		return err
	}

	for i := 0; i < len(m.Value); i++ {

		if swag.IsZero(m.Value[i]) { // not required
			continue
		}

		if m.Value[i] != nil {

			if err := m.Value[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}
