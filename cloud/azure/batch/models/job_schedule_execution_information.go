package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// JobScheduleExecutionInformation Contains information about jobs that have been and will be run under a job schedule.
// swagger:model JobScheduleExecutionInformation
type JobScheduleExecutionInformation struct {

	// The time at which the schedule ended.
	//
	// This property is set only if the job schedule is in the completed state.
	EndTime strfmt.DateTime `json:"endTime,omitempty"`

	// The next time at which a job will be created under this schedule.
	//
	// This property is meaningful only if the schedule is in the active state when the time comes around. For example, if the schedule is disabled, no job will be created at nextRunTime unless the job is enabled before then.
	NextRunTime strfmt.DateTime `json:"nextRunTime,omitempty"`

	// Information about the most recent job under the job schedule.
	//
	// This property is present only if the at least one job has run under the schedule.
	RecentJob *RecentJob `json:"recentJob,omitempty"`
}

// Validate validates this job schedule execution information
func (m *JobScheduleExecutionInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRecentJob(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *JobScheduleExecutionInformation) validateRecentJob(formats strfmt.Registry) error {

	if swag.IsZero(m.RecentJob) { // not required
		return nil
	}

	if m.RecentJob != nil {

		if err := m.RecentJob.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
