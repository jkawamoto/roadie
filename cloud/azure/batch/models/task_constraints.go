package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
)

// TaskConstraints Execution constraints to apply to a task.
// swagger:model TaskConstraints
type TaskConstraints struct {

	// The maximum number of times the task may be retried. The Batch service retries a task if its exit code is nonzero.
	//
	// Note that this value specifically controls the number of retries. The Batch service will try the task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries the task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry the task. If the maximum retry count is -1, the Batch service retries the task without limit.
	MaxTaskRetryCount int32 `json:"maxTaskRetryCount,omitempty"`

	// The maximum elapsed time that the task may run, measured from the time the task starts. If the task does not complete within the time limit, the Batch service terminates it.
	//
	// If this is not specified, there is no time limit on how long the task may run.
	MaxWallClockTime strfmt.Duration `json:"maxWallClockTime,omitempty"`

	// The minimum time to retain the task directory on the compute node where it ran, from the time it completes execution. After this time, the Batch service may delete the task directory and all its contents.
	//
	// The default is infinite, i.e. the task directory will be retained until the compute node is removed or reimaged.
	RetentionTime strfmt.Duration `json:"retentionTime,omitempty"`
}

// Validate validates this task constraints
func (m *TaskConstraints) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
