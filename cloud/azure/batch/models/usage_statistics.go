package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// UsageStatistics Statistics related to pool usage information.
// swagger:model UsageStatistics
type UsageStatistics struct {

	// The aggregated wall-clock time of the dedicated compute node cores being part of the pool.
	// Required: true
	DedicatedCoreTime *strfmt.Duration `json:"dedicatedCoreTime"`

	// The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
	// Required: true
	LastUpdateTime *strfmt.DateTime `json:"lastUpdateTime"`

	// The start time of the time range covered by the statistics.
	// Required: true
	StartTime *strfmt.DateTime `json:"startTime"`
}

// Validate validates this usage statistics
func (m *UsageStatistics) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDedicatedCoreTime(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateLastUpdateTime(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStartTime(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UsageStatistics) validateDedicatedCoreTime(formats strfmt.Registry) error {

	if err := validate.Required("dedicatedCoreTime", "body", m.DedicatedCoreTime); err != nil {
		return err
	}

	return nil
}

func (m *UsageStatistics) validateLastUpdateTime(formats strfmt.Registry) error {

	if err := validate.Required("lastUpdateTime", "body", m.LastUpdateTime); err != nil {
		return err
	}

	return nil
}

func (m *UsageStatistics) validateStartTime(formats strfmt.Registry) error {

	if err := validate.Required("startTime", "body", m.StartTime); err != nil {
		return err
	}

	return nil
}
