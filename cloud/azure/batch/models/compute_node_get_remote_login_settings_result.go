package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ComputeNodeGetRemoteLoginSettingsResult The remote login settings for a compute node.
// swagger:model ComputeNodeGetRemoteLoginSettingsResult
type ComputeNodeGetRemoteLoginSettingsResult struct {

	// The IP address used for remote login to the compute node.
	// Required: true
	RemoteLoginIPAddress *string `json:"remoteLoginIPAddress"`

	// The port used for remote login to the compute node.
	// Required: true
	RemoteLoginPort *int32 `json:"remoteLoginPort"`
}

// Validate validates this compute node get remote login settings result
func (m *ComputeNodeGetRemoteLoginSettingsResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRemoteLoginIPAddress(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRemoteLoginPort(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ComputeNodeGetRemoteLoginSettingsResult) validateRemoteLoginIPAddress(formats strfmt.Registry) error {

	if err := validate.Required("remoteLoginIPAddress", "body", m.RemoteLoginIPAddress); err != nil {
		return err
	}

	return nil
}

func (m *ComputeNodeGetRemoteLoginSettingsResult) validateRemoteLoginPort(formats strfmt.Registry) error {

	if err := validate.Required("remoteLoginPort", "body", m.RemoteLoginPort); err != nil {
		return err
	}

	return nil
}
