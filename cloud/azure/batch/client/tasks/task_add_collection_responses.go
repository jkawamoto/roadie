package tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/jkawamoto/roadie/cloud/azure/batch/models"
)

// TaskAddCollectionReader is a Reader for the TaskAddCollection structure.
type TaskAddCollectionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TaskAddCollectionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewTaskAddCollectionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewTaskAddCollectionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewTaskAddCollectionOK creates a TaskAddCollectionOK with default headers values
func NewTaskAddCollectionOK() *TaskAddCollectionOK {
	return &TaskAddCollectionOK{}
}

/*TaskAddCollectionOK handles this case with default header values.

A response containing the results of the add task collection operation.
*/
type TaskAddCollectionOK struct {
	/*The client-request-id provided by the client during the request. This will be returned only if the return-client-request-id parameter was set to true.
	 */
	ClientRequestID string
	/*This header uniquely identifies the request that was made and can be used for troubleshooting the request. If a request is consistently failing and you have verified that the request is properly formulated, you may use this value to report the error to Microsoft. In your report, include the value of this header, the approximate time that the request was made, the Batch account against which the request was made, and the region that account resides in.
	 */
	RequestID string

	Payload *models.TaskAddCollectionResult
}

func (o *TaskAddCollectionOK) Error() string {
	return fmt.Sprintf("[POST /jobs/{jobId}/addtaskcollection][%d] taskAddCollectionOK  %+v", 200, o.Payload)
}

func (o *TaskAddCollectionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header client-request-id
	o.ClientRequestID = response.GetHeader("client-request-id")

	// response header request-id
	o.RequestID = response.GetHeader("request-id")

	o.Payload = new(models.TaskAddCollectionResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTaskAddCollectionDefault creates a TaskAddCollectionDefault with default headers values
func NewTaskAddCollectionDefault(code int) *TaskAddCollectionDefault {
	return &TaskAddCollectionDefault{
		_statusCode: code,
	}
}

/*TaskAddCollectionDefault handles this case with default header values.

Unexpected error
*/
type TaskAddCollectionDefault struct {
	_statusCode int

	Payload *models.BatchError
}

// Code gets the status code for the task add collection default response
func (o *TaskAddCollectionDefault) Code() int {
	return o._statusCode
}

func (o *TaskAddCollectionDefault) Error() string {
	return fmt.Sprintf("[POST /jobs/{jobId}/addtaskcollection][%d] Task_AddCollection default  %+v", o._statusCode, o.Payload)
}

func (o *TaskAddCollectionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BatchError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
