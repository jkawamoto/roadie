package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/jkawamoto/roadie/cloud/azure/batch/client/accounts"
	"github.com/jkawamoto/roadie/cloud/azure/batch/client/applications"
	"github.com/jkawamoto/roadie/cloud/azure/batch/client/certificates"
	"github.com/jkawamoto/roadie/cloud/azure/batch/client/compute_nodes"
	"github.com/jkawamoto/roadie/cloud/azure/batch/client/files"
	"github.com/jkawamoto/roadie/cloud/azure/batch/client/job_schedules"
	"github.com/jkawamoto/roadie/cloud/azure/batch/client/jobs"
	"github.com/jkawamoto/roadie/cloud/azure/batch/client/pools"
	"github.com/jkawamoto/roadie/cloud/azure/batch/client/tasks"
)

// Default batch service HTTP client.
var Default = NewHTTPClient(nil)

// NewHTTPClient creates a new batch service HTTP client.
func NewHTTPClient(formats strfmt.Registry) *BatchService {
	if formats == nil {
		formats = strfmt.Default
	}
	transport := httptransport.New("batch.core.windows.net", "/", []string{"https"})
	return New(transport, formats)
}

// New creates a new batch service client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *BatchService {
	cli := new(BatchService)
	cli.Transport = transport

	cli.Accounts = accounts.New(transport, formats)

	cli.Applications = applications.New(transport, formats)

	cli.Certificates = certificates.New(transport, formats)

	cli.ComputeNodes = compute_nodes.New(transport, formats)

	cli.Files = files.New(transport, formats)

	cli.JobSchedules = job_schedules.New(transport, formats)

	cli.Jobs = jobs.New(transport, formats)

	cli.Pools = pools.New(transport, formats)

	cli.Tasks = tasks.New(transport, formats)

	return cli
}

// BatchService is a client for batch service
type BatchService struct {
	Accounts *accounts.Client

	Applications *applications.Client

	Certificates *certificates.Client

	ComputeNodes *compute_nodes.Client

	Files *files.Client

	JobSchedules *job_schedules.Client

	Jobs *jobs.Client

	Pools *pools.Client

	Tasks *tasks.Client

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *BatchService) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport

	c.Accounts.SetTransport(transport)

	c.Applications.SetTransport(transport)

	c.Certificates.SetTransport(transport)

	c.ComputeNodes.SetTransport(transport)

	c.Files.SetTransport(transport)

	c.JobSchedules.SetTransport(transport)

	c.Jobs.SetTransport(transport)

	c.Pools.SetTransport(transport)

	c.Tasks.SetTransport(transport)

}
