<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Roadie</title>
    <link>https://jkawamoto.github.io/roadie/index.xml</link>
    <description>Recent content on Roadie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 05 May 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://jkawamoto.github.io/roadie/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Blogs</title>
      <link>https://jkawamoto.github.io/roadie/documents/blogs/</link>
      <pubDate>Fri, 05 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/roadie/documents/blogs/</guid>
      <description>&lt;img class=&#34;img-responsive center-block&#34; src=&#34;img/bloglinks.png&#34;/&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jkawamoto.info/blogs/get-log-entries-from-stackdriver-logging-2/&#34;&gt;Receive log entries from Stackdriver Logging by logging package&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jkawamoto.info/blogs/startup-script-cannot-find-docker/&#34;&gt;Startup script cannot find docker command in CoreOS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jkawamoto.info/blogs/get-logs-from-stackdriver-logging/&#34;&gt;Receive logs from Stackdriver Logging&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>ブログリンク集</title>
      <link>https://jkawamoto.github.io/roadie/ja/blogs/</link>
      <pubDate>Fri, 05 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/roadie/ja/blogs/</guid>
      <description>&lt;img class=&#34;img-responsive center-block&#34; src=&#34;img/bloglinks.png&#34;/&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/jkawamoto/items/8e02d029f50538bcfd6a&#34;&gt;Google Cloud for Goで OAuth アクセストークンを使う&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/jkawamoto/items/a19361bff33607264c9f&#34;&gt;GoogleAPI を利用するデスクトップアプリの OAuth 2.0 認証&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/jkawamoto/items/c8b9698572b858cfbe0f&#34;&gt;Stackdriver Logging からログを取得する(その２)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/jkawamoto/items/7d5e0684130d8773b657&#34;&gt;ComputeEngine で CoreOS を選ぶとスタートアップスクリプトから docker が見えない&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/jkawamoto/items/8e3e6c3e2a094a4ae214&#34;&gt;Stackdriver Logging からログを取得する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/jkawamoto/items/751558536a597a33ae2a&#34;&gt;もっと簡単にGoogleCloudPlatformを使う&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/jkawamoto/items/fbe28dbed533a7001f68&#34;&gt;GoogleCloudPlatformで単発処理を行うDockerコンテナ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Authentication Failed</title>
      <link>https://jkawamoto.github.io/roadie/auth/error/</link>
      <pubDate>Wed, 03 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/roadie/auth/error/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Authentication process has been failed. Please close this page and try it again.&lt;/li&gt;
&lt;li&gt;認証手続きに失敗しました．このページを閉じてアプリケーションに戻ってください．&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Authentication Success</title>
      <link>https://jkawamoto.github.io/roadie/auth/succeed/</link>
      <pubDate>Wed, 03 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/roadie/auth/succeed/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Authentication process has been done successfully. Please close this page.&lt;/li&gt;
&lt;li&gt;認証手続きが終了しました．このページを閉じてアプリケーションに戻ってください．&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Forum</title>
      <link>https://jkawamoto.github.io/roadie/info/forum/</link>
      <pubDate>Wed, 21 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/roadie/info/forum/</guid>
      <description>&lt;p&gt;&lt;img class=&#34;img-responsive center-block&#34; src=&#34;img/forum.png&#34;/&gt;&lt;/p&gt;

&lt;div id=&#34;disqus_thread&#34;&gt;&lt;/div&gt;
&lt;script&gt;
(function() { 
var d = document, s = d.createElement(&#39;script&#39;);
s.src = &#39;https://roadie-cloud.disqus.com/embed.js&#39;;
s.setAttribute(&#39;data-timestamp&#39;, +new Date());
(d.head || d.body).appendChild(s);
})();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&#34;https://disqus.com/?ref_noscript&#34;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

</description>
    </item>
    
    <item>
      <title>Licenses</title>
      <link>https://jkawamoto.github.io/roadie/info/licenses/</link>
      <pubDate>Wed, 21 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/roadie/info/licenses/</guid>
      <description>

&lt;p&gt;This software is released under the GPLv3.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Copyright &amp;copy; 2016-2017 Junpei Kawamoto&lt;/p&gt;

&lt;p&gt;This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.&lt;/p&gt;

&lt;p&gt;This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.&lt;/p&gt;

&lt;p&gt;You should have received a copy of the GNU General Public License
along with this program.  If not, see &lt;a href=&#34;http://www.gnu.org/licenses/&#34;&gt;http://www.gnu.org/licenses/&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;notices-for-libraries&#34;&gt;Notices for libraries&lt;/h2&gt;

&lt;p&gt;This software uses the following open source libraries:&lt;/p&gt;

&lt;h3 id=&#34;chalk-https-github-com-ttacon-chalk&#34;&gt;&lt;a href=&#34;https://github.com/ttacon/chalk&#34;&gt;chalk&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Copyright &amp;copy; 2014 Trey Tacon&lt;/p&gt;

&lt;p&gt;Licensed under the MIT License.&lt;/p&gt;

&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &amp;ldquo;Software&amp;rdquo;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:&lt;/p&gt;

&lt;p&gt;The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.&lt;/p&gt;

&lt;p&gt;THE SOFTWARE IS PROVIDED &amp;ldquo;AS IS&amp;rdquo;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;cli-https-github-com-urfave-cli&#34;&gt;&lt;a href=&#34;https://github.com/urfave/cli&#34;&gt;cli&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Copyright &amp;copy; 2016 Jeremy Saenz &amp;amp; Contributors&lt;/p&gt;

&lt;p&gt;Licensed under the MIT License.&lt;/p&gt;

&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &amp;ldquo;Software&amp;rdquo;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:&lt;/p&gt;

&lt;p&gt;The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.&lt;/p&gt;

&lt;p&gt;THE SOFTWARE IS PROVIDED &amp;ldquo;AS IS&amp;rdquo;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;google-apis-client-library-for-go-https-github-com-google-google-api-go-client&#34;&gt;&lt;a href=&#34;https://github.com/google/google-api-go-client&#34;&gt;Google APIs Client Library for Go&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Copyright &amp;copy; 2011 Google Inc. All rights reserved.&lt;/p&gt;

&lt;p&gt;Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Redistributions of source code must retain the above copyright
notice, this list of conditions and the following disclaimer.&lt;/li&gt;
&lt;li&gt;Redistributions in binary form must reproduce the above
copyright notice, this list of conditions and the following disclaimer
in the documentation and/or other materials provided with the
distribution.&lt;/li&gt;
&lt;li&gt;Neither the name of Google Inc. nor the names of its
contributors may be used to endorse or promote products derived from
this software without specific prior written permission.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
&amp;ldquo;AS IS&amp;rdquo; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;go-colorable-https-github-com-mattn-go-colorable&#34;&gt;&lt;a href=&#34;https://github.com/mattn/go-colorable&#34;&gt;go-colorable&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;The MIT License (MIT)&lt;/p&gt;

&lt;p&gt;Copyright &amp;copy; 2016 Yasuhiro Matsumoto&lt;/p&gt;

&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &amp;ldquo;Software&amp;rdquo;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:&lt;/p&gt;

&lt;p&gt;The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.&lt;/p&gt;

&lt;p&gt;THE SOFTWARE IS PROVIDED &amp;ldquo;AS IS&amp;rdquo;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;google-cloud-for-go-https-github-com-googlecloudplatform-google-cloud-go&#34;&gt;&lt;a href=&#34;https://github.com/GoogleCloudPlatform/google-cloud-go&#34;&gt;Google Cloud for Go&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Copyright 2014 Google Inc. All Rights Reserved.&lt;/p&gt;

&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &amp;ldquo;License&amp;rdquo;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &amp;ldquo;AS IS&amp;rdquo; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;interact-https-github-com-deiwin-interact&#34;&gt;&lt;a href=&#34;https://github.com/deiwin/interact&#34;&gt;Interact&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Copyright &amp;copy; 2015 Deiwin Sarjas&lt;/p&gt;

&lt;p&gt;Licensed under the MIT License.&lt;/p&gt;

&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &amp;ldquo;Software&amp;rdquo;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt;

&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt;

&lt;p&gt;THE SOFTWARE IS PROVIDED &amp;ldquo;AS IS&amp;rdquo;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;spinner-https-github-com-briandowns-spinner&#34;&gt;&lt;a href=&#34;https://github.com/briandowns/spinner&#34;&gt;Spinner&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Copyright Brian Downs.&lt;/p&gt;

&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &amp;ldquo;License&amp;rdquo;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &amp;ldquo;AS IS&amp;rdquo; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;uitable-https-github-com-gosuri-uitable&#34;&gt;&lt;a href=&#34;https://github.com/gosuri/uitable&#34;&gt;uitable&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Copyright &amp;copy; 2015, Greg Osuri&lt;/p&gt;

&lt;p&gt;Licensed under the MIT License.&lt;/p&gt;

&lt;p&gt;Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &amp;ldquo;Software&amp;rdquo;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:&lt;/p&gt;

&lt;p&gt;The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.&lt;/p&gt;

&lt;p&gt;THE SOFTWARE IS PROVIDED &amp;ldquo;AS IS&amp;rdquo;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;pb-https-github-com-cheggaaa-pb&#34;&gt;&lt;a href=&#34;https://github.com/cheggaaa/pb&#34;&gt;pb&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Copyright &amp;copy; 2012-2015, Sergey Cherepanov
All rights reserved.&lt;/p&gt;

&lt;p&gt;Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Neither the name of the author nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS &amp;ldquo;AS IS&amp;rdquo; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;yaml-support-for-the-go-language-https-github-com-go-yaml-yaml&#34;&gt;&lt;a href=&#34;https://github.com/go-yaml/yaml&#34;&gt;YAML support for the Go language&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Copyright 2011-2016 Canonical Ltd.&lt;/p&gt;

&lt;p&gt;Licensed under the Apache License, Version 2.0 (the &amp;ldquo;License&amp;rdquo;);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.apache.org/licenses/LICENSE-2.0&#34;&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an &amp;ldquo;AS IS&amp;rdquo; BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Description</title>
      <link>https://jkawamoto.github.io/roadie/description/</link>
      <pubDate>Tue, 20 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/roadie/description/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/copyleft/gpl.html&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/license-GPLv3-blue.svg&#34; alt=&#34;GPLv3&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://travis-ci.org/jkawamoto/roadie&#34;&gt;&lt;img src=&#34;https://travis-ci.org/jkawamoto/roadie.svg?branch=master&#34; alt=&#34;Build Status&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://app.wercker.com/project/byKey/6c499024136e7067b86bef4bd07d7f62&#34;&gt;&lt;img src=&#34;https://app.wercker.com/status/6c499024136e7067b86bef4bd07d7f62/s/master&#34; alt=&#34;wercker status&#34; title=&#34;wercker status&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://goreportcard.com/report/github.com/jkawamoto/roadie&#34;&gt;&lt;img src=&#34;https://goreportcard.com/badge/github.com/jkawamoto/roadie&#34; alt=&#34;Go Report&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://github.com/jkawamoto/roadie/releases/tag/v0.4.0&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/release-0.4.0-brightgreen.svg&#34; alt=&#34;Release&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;http://qiita.com/jkawamoto/items/751558536a597a33ae2a&#34;&gt;&lt;img src=&#34;https://img.shields.io/badge/qiita-%E6%97%A5%E6%9C%AC%E8%AA%9E-brightgreen.svg&#34; alt=&#34;Japanese&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Roadie helps you to upload your source codes to the cloud, create and delete
instances, and manage outputs.&lt;/p&gt;

&lt;p&gt;For example,&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie run --local . --name analyze-wowah script.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;uploads your source codes in current directory, and run them in such a manner
that &lt;code&gt;script.yml&lt;/code&gt; specifies. The &lt;code&gt;script.yml&lt;/code&gt; is a simple YAML file like&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apt:
  - unrar
data:
  - http://mmnet.iis.sinica.edu.tw/dl/wowah/wowah.rar
run:
  - unrar x -r wowah.rar
  - analyze WoWAH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above &lt;code&gt;script.yml&lt;/code&gt; asks roadie to install apt package &lt;code&gt;unrar&lt;/code&gt; and
download a data file from such URL as the preparation. Then, it directs
to run those two commands: unrar the downloaded file, analyze the obtained
data files.&lt;/p&gt;

&lt;p&gt;Roadie uploads results of such commands to a cloud storage after they finish.
You can access those results by&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie result get analyze-wowah &amp;quot;*&amp;quot; -o ./res
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then, Roadie downloads all result files into &lt;code&gt;./res&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;Currently, Roadie supports&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;i class=&#34;fa fa-google&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google Cloud Platform&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;i class=&#34;fa fa-windows&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://azure.microsoft.com/&#34;&gt;Microsoft Azure&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;

&lt;p&gt;Compiled binary files for some platforms are uploaded in
&lt;a href=&#34;https://github.com/jkawamoto/roadie/releases&#34;&gt;release page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re a &lt;a href=&#34;http://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; or &lt;a href=&#34;http://linuxbrew.sh/&#34;&gt;Linuxbrew&lt;/a&gt;
user, you can install Roadie by the following commands:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ brew tap jkawamoto/roadie
$ brew install roadie
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;initialization&#34;&gt;Initialization&lt;/h2&gt;

&lt;p&gt;After installing Roadie, the following initialization is required in order to
authorize &lt;code&gt;roadie&lt;/code&gt; to access cloud services.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie init
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;This software except files in &lt;code&gt;docker&lt;/code&gt; folder is released under The GNU General Public License Version 3,
see &lt;a href=&#34;info/licenses/&#34;&gt;LICENSES&lt;/a&gt; for more detail.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>https://jkawamoto.github.io/roadie/documents/installation/</link>
      <pubDate>Tue, 20 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/roadie/documents/installation/</guid>
      <description>

&lt;h3 id=&#34;install&#34;&gt;Install&lt;/h3&gt;

&lt;p&gt;Roadie&amp;rsquo;s compiled binary files for some platforms are found in GitHub&amp;rsquo;s
&lt;a href=&#34;https://github.com/jkawamoto/roadie/releases&#34;&gt;release page&lt;/a&gt;.
Download one of them according to your environment and put the binary into
a directory in your &lt;code&gt;$PATH&lt;/code&gt;, or put it as same directory as your current project.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re a &lt;a href=&#34;http://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; or &lt;a href=&#34;http://linuxbrew.sh/&#34;&gt;Linuxbrew&lt;/a&gt;
user, you can install Roadie by the following commands:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ brew tap jkawamoto/roadie
$ brew install roadie
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;initialization&#34;&gt;Initialization&lt;/h3&gt;

&lt;p&gt;The following command initializes Roadie:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Since Roadie currently supports the following cloud services,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;i class=&#34;fa fa-google&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google Cloud Platform&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;i class=&#34;fa fa-windows&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://azure.microsoft.com/&#34;&gt;Microsoft Azure&lt;/a&gt;,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;the initialization command asks which cloud service you will use first.&lt;/p&gt;

&lt;p&gt;Then you need to tell Roadie some information depended on cloud services.&lt;/p&gt;

&lt;h4 id=&#34;google-cloud-platform&#34;&gt;Google Cloud Platform&lt;/h4&gt;

&lt;p&gt;Google Cloud Platform manages resources based on project,
and Roadie needs to know which project it will work with.
After choosing Google Cloud Platform in the initialization, Roadie asks a project ID.&lt;/p&gt;

&lt;p&gt;You can find available project IDs in &lt;a href=&#34;https://console.cloud.google.com/project&#34;&gt;the cloud console&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;img/gcp-projects-en.png&#34; style=&#34;width: 80%;&#34; title=&#34;Google Cloud Platform Projects&#34;/&gt;&lt;/p&gt;

&lt;p&gt;Note that, Roadie requires a &lt;em&gt;project ID&lt;/em&gt;, not &lt;em&gt;project name&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;After entering a project ID, Roadie starts authorization process and shows a URL.
You need to open the URL by a web browser on the same computer Roadie running
and grant permission.&lt;/p&gt;

&lt;p&gt;Roadie then creates configuration file &lt;code&gt;roadie.yml&lt;/code&gt; in the current directory.
Roadie has other configurations, see &lt;a href=&#34;documents/configuration&#34;&gt;configuration page&lt;/a&gt; for detailed information.&lt;/p&gt;

&lt;h4 id=&#34;microsoft-azure&#34;&gt;Microsoft Azure&lt;/h4&gt;

&lt;p&gt;In Microsoft Azure, each user account belongs to an Active Directory,
which is identified by a tenant ID,
and each user has several subscriptions.
Roadie hence needs to know both tenant ID and subscription ID.&lt;/p&gt;

&lt;p&gt;To find your tenant ID, open Azure Active Directory tab
in the &lt;a href=&#34;https://portal.azure.com/&#34;&gt;portal site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;img/active-directory-en.png&#34; style=&#34;width: 80%;&#34; title=&#34;Azure Active Directory&#34;/&gt;&lt;/p&gt;

&lt;p&gt;Then, open Properties tab.
The &lt;em&gt;directory ID&lt;/em&gt; in the tab is the your &lt;em&gt;tenant ID&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;img/tenant-id-en.png&#34; style=&#34;width: 80%;&#34; title=&#34;Tenant ID&#34;/&gt;&lt;/p&gt;

&lt;p&gt;To find your subscription IDs, open Cost Management + Billing in the portal site.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;img/subscription-en.png&#34; style=&#34;width: 80%;&#34; title=&#34;Cost Management + Billing&#34;/&gt;&lt;/p&gt;

&lt;p&gt;In Overview tab, there is a list of your subscriptions.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;img/subscription2-en.png&#34; style=&#34;width: 80%;&#34; title=&#34;Subscription ID&#34;/&gt;&lt;/p&gt;

&lt;p&gt;Roadie also uses &lt;em&gt;project ID&lt;/em&gt; to manage resources.
This ID must be unique in the world and can have lower alphabets and numbers,
but you can use any ID.&lt;/p&gt;

&lt;p&gt;After entering a tenant ID, subscription ID, and project ID,
Roadie starts authorization process.
It shows a URL and a pass code.
You need to open the URL by a web browser and enter the code.&lt;/p&gt;

&lt;p&gt;Roadie then creates configuration file &lt;code&gt;roadie.yml&lt;/code&gt; in the current directory.
Roadie has other configurations, see &lt;a href=&#34;documents/configuration&#34;&gt;configuration page&lt;/a&gt; for detailed information.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>https://jkawamoto.github.io/roadie/documents/configuration/</link>
      <pubDate>Sun, 14 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/roadie/documents/configuration/</guid>
      <description>

&lt;p&gt;Roadie&amp;rsquo;s configuration is stored as a YAML document; by default &lt;code&gt;roadie.yml&lt;/code&gt;,
and it is editable by any text editors.
In addition, Roadie provides &lt;code&gt;roadie config&lt;/code&gt; command to edit configurations
interactively.&lt;/p&gt;

&lt;p&gt;This document first explain &lt;code&gt;roadie config&lt;/code&gt; command, and then the YAML based
configuration file.&lt;/p&gt;

&lt;h3 id=&#34;config-command&#34;&gt;config command&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;roadie config&lt;/code&gt; command shows current configurations and available options, and
update them.
It provides the following sub commands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;project&lt;/strong&gt; shows and updates project ID,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;region&lt;/strong&gt; shows and updates region where programs will be run,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;machine&lt;/strong&gt; shows and updates machine type used to run scripts,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Every configurations are stored to &lt;code&gt;roadie.yml&lt;/code&gt;
in the current working directory by default.
If you want to use another file, use &lt;code&gt;-c&lt;/code&gt; flag with a file path.&lt;/p&gt;

&lt;p&gt;For example, the following command sets &amp;ldquo;another&amp;rdquo; as the project ID and
stores it to &lt;code&gt;another.yml&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie -c another.yml config project set another
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;project&#34;&gt;project&lt;/h4&gt;

&lt;p&gt;To check the project ID currently set, run&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie config project
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and to set another project ID &lt;code&gt;PROJECT&lt;/code&gt;, run&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie config project set PROJECT
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;region&#34;&gt;region&lt;/h4&gt;

&lt;p&gt;In most of cloud services, they have lots of servers in the world and
those servers are grouped based on actual locations.
Roadie needs to know which group of servers it should use to run programs.&lt;/p&gt;

&lt;p&gt;You can find available regions in the cloud platform you&amp;rsquo;re using by running
the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie config region list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To find current selected region, run&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie config region
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and to set another &lt;code&gt;REGION&lt;/code&gt;, run&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie config region set REGION
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;machine&#34;&gt;machine&lt;/h3&gt;

&lt;p&gt;There are some options about machine type on which your program runs.
Each machine type has different number of virtual CPUs and RAM.
You can find available machine types by running&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie config machine list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Available machine types might be depended to which zone you choose.
You should set zone before checking machine types.&lt;/p&gt;

&lt;p&gt;To check current machine type, run&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie config machine
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and to set another &lt;code&gt;TYPE&lt;/code&gt;, run&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie config machine set TYPE
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;configuration-file&#34;&gt;Configuration file&lt;/h3&gt;

&lt;p&gt;Roadie&amp;rsquo;s configuration file is a YAML document.
The elements in the document are different based on which cloud provider,
Google Cloud Platform or Microsoft Azure.&lt;/p&gt;

&lt;h4 id=&#34;google-cloud-platform&#34;&gt;Google Cloud Platform&lt;/h4&gt;

&lt;p&gt;If you choose &lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google Cloud Platform&lt;/a&gt;, the root
element of the configuration file is &lt;code&gt;gcp&lt;/code&gt;, and it has child elements as shown
below:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;gcp:
  project: &amp;lt;project ID&amp;gt;
  bucket: &amp;lt;bucket ID&amp;gt;
  zone: us-central1-b
  machine_type: n1-standard-1
  disk_size: 10
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;project&lt;/code&gt;: project ID registered in &lt;a href=&#34;https://console.cloud.google.com/project&#34;&gt;Google Cloud Platform&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bucket&lt;/code&gt;: bucket ID of &lt;a href=&#34;https://cloud.google.com/storage/&#34;&gt;Cloud Storage&lt;/a&gt; to
store resources. This ID also has to be unique in the world. By default, the
same ID as the project ID is set.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;zone&lt;/code&gt;: name of region where programs will be run. By default, one of the
cheapest region &lt;code&gt;us-central1-b&lt;/code&gt; is selected.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;machine_type&lt;/code&gt;: machine type. By default, one of the cheapest type
&lt;code&gt;n1-standard-1&lt;/code&gt; is selected.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;disk_size&lt;/code&gt;: disk size in GB of virtual machines hosting programs. By default,
10 GB is selected.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;microsoft-azure&#34;&gt;Microsoft Azure&lt;/h4&gt;

&lt;p&gt;If you choose &lt;a href=&#34;https://azure.microsoft.com/&#34;&gt;Microsoft Azure&lt;/a&gt;, the root element
of the configuration file is &lt;code&gt;azure&lt;/code&gt;, and it has child elements as shown below:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;azure:
  tenant_id: &amp;lt;directory ID (tenant ID)&amp;gt;
  subscription_id: &amp;lt;subscription ID&amp;gt;
  project_id: &amp;lt;project ID&amp;gt;
  location: westus2
  machine_type: Standard_A2
  os:
    publisher_name: Canonical
    offer: UbuntuServer
    skus: &amp;quot;17.04&amp;quot;
    version: latest
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tenant_id&lt;/code&gt;: your tenant ID.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;subscription_id&lt;/code&gt;: your subscription ID.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;project_id&lt;/code&gt;: project ID.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;location&lt;/code&gt;: location where programs will be run (default: westus2).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;machine_type&lt;/code&gt;: machine type (default: Standard_A2).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;os&lt;/code&gt;: OS type to be used. Currently, only default values are supported.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Data</title>
      <link>https://jkawamoto.github.io/roadie/documents/data/</link>
      <pubDate>Sun, 14 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/roadie/documents/data/</guid>
      <description>

&lt;p&gt;Roadie manages three kinds of data in a cloud storage:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;source code,&lt;/li&gt;
&lt;li&gt;data files,&lt;/li&gt;
&lt;li&gt;outputted results.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To access those data, Roadie has commands &lt;code&gt;source&lt;/code&gt;, &lt;code&gt;data&lt;/code&gt;,
and &lt;code&gt;result&lt;/code&gt;, respectively.&lt;/p&gt;

&lt;h3 id=&#34;source-code&#34;&gt;source code&lt;/h3&gt;

&lt;p&gt;Source code uploaded by &lt;code&gt;roadie run&lt;/code&gt; command with &lt;code&gt;--local&lt;/code&gt; flag are stored in
&lt;code&gt;roadie://source/&lt;/code&gt;. &lt;code&gt;source&lt;/code&gt; command provides methods to manage those source
code.&lt;/p&gt;

&lt;h4 id=&#34;list&#34;&gt;list&lt;/h4&gt;

&lt;p&gt;To find source code archives stored in &lt;code&gt;roadie://source/&lt;/code&gt;, use &lt;code&gt;list&lt;/code&gt; sub command.
The following example prints all stored archives:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie source list
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;delete&#34;&gt;delete&lt;/h4&gt;

&lt;p&gt;To delete an archive file &lt;code&gt;FILENAME&lt;/code&gt;, use &lt;code&gt;delete&lt;/code&gt; sub command:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie source delete FILENAME
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;get&#34;&gt;get&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;get&lt;/code&gt; sub command downloads a stored archive. The following example downloads
&lt;code&gt;FILENAME&lt;/code&gt; in the current directory:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie source get FILENAME
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want to download to another directory, such as &lt;code&gt;~/path&lt;/code&gt;, give a path
with &lt;code&gt;-o&lt;/code&gt; flag:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie source get -o ~/path FILENAME
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;put&#34;&gt;put&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;put&lt;/code&gt; sub command uploads your source code.
The following example archives files in &lt;code&gt;~/source&lt;/code&gt; into &lt;code&gt;source.tar.gz&lt;/code&gt;, and
uploads it:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie source put ~/source source.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;data-files&#34;&gt;data files&lt;/h3&gt;

&lt;p&gt;Data files are stored in &lt;code&gt;roadie://data/&lt;/code&gt; and referred in &lt;code&gt;data&lt;/code&gt; of Roadie&amp;rsquo;s
script files.&lt;/p&gt;

&lt;h4 id=&#34;put-1&#34;&gt;put&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;put&lt;/code&gt; sub command uploads a file to a cloud storage.
The following example uploads &lt;code&gt;FILENAME&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie data put FILENAME
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and after uploading is succeeded, it shows the URL of the upload file.&lt;/p&gt;

&lt;h4 id=&#34;list-1&#34;&gt;list&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;list&lt;/code&gt; sub command shows uploaded files and those URLs.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie data list --url
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If &lt;code&gt;--url&lt;/code&gt; flag is not give, only file names are shown.&lt;/p&gt;

&lt;h4 id=&#34;delete-1&#34;&gt;delete&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;delete&lt;/code&gt; sub command deletes an uploaded file.
The following example deletes &lt;code&gt;FILENAME&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie data delete FILENAME
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;get-1&#34;&gt;get&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;get&lt;/code&gt; sub command downloads an uploaded file.
The following example download &lt;code&gt;FILENAME&lt;/code&gt; into the current directory:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie data get FILENAME
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want to download to another directory, such as &lt;code&gt;~/path&lt;/code&gt;, give a path
with &lt;code&gt;-o&lt;/code&gt; flag:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie data get -o ~/path FILENAME
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;result-files&#34;&gt;Result files&lt;/h3&gt;

&lt;p&gt;Messages written in the standard output &lt;code&gt;stdout&lt;/code&gt; and files specified in &lt;code&gt;result&lt;/code&gt;
of Roadie&amp;rsquo;s script file will be stored in &lt;code&gt;roadie://resutl/&amp;lt;instance name&amp;gt;/&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;list-2&#34;&gt;list&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;list&lt;/code&gt; sub command without any options shows instance names.
The following example prints a list of instance names:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie result list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;list&lt;/code&gt; sub command with an instance name shows result files uploaded from the
specified instance.
The following example shows result file names uploaded from &lt;code&gt;INSTANCE&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie result list INSTANCE
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;get-2&#34;&gt;get&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;get&lt;/code&gt; sub command takes a glob pattern and downloads result files matching the
given pattern.
The following example downloads all result file into the current directory
by using a wild card pattern &lt;code&gt;*&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie result get INSTANCE &amp;quot;*&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want to download them to another directory, use &lt;code&gt;-o&lt;/code&gt; flag.
For example, the following example downloads files start with &lt;code&gt;stdout&lt;/code&gt; into
&lt;code&gt;~/path&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie result get INSTANCE &amp;quot;stdout*&amp;quot; -o `~/path`
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;delete-2&#34;&gt;delete&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;delete&lt;/code&gt; sub command deletes result files matching a given glob pattern.
For example, the following example deletes files end with &lt;code&gt;.png&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie result delete INSTANCE &amp;quot;*.png&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If the glob pattern is omitted, all result files &lt;em&gt;including log files&lt;/em&gt; will be
deleted.&lt;/p&gt;

&lt;h4 id=&#34;show&#34;&gt;show&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;show&lt;/code&gt; sub command shows messages written in the standard output.
The following example shows all messages in &lt;code&gt;INSTANCE&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie result show INSTANCE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want to see outputted massages from &lt;em&gt;i&lt;/em&gt;-th command in &lt;code&gt;run&lt;/code&gt; of your
script file, give the number &lt;code&gt;i&lt;/code&gt; like&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie result show INSTANCE i
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Execution</title>
      <link>https://jkawamoto.github.io/roadie/documents/execution/</link>
      <pubDate>Sun, 14 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/roadie/documents/execution/</guid>
      <description>

&lt;h3 id=&#34;script-file&#34;&gt;Script file&lt;/h3&gt;

&lt;p&gt;Roadie&amp;rsquo;s script file is a YAML document which has five elements
&lt;code&gt;apt&lt;/code&gt;, &lt;code&gt;source&lt;/code&gt;, &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;run&lt;/code&gt;, and &lt;code&gt;upload&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here is an example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apt:
  - unrar
source: https://github.com/abcdefg/some-program.git
data:
  - http://mmnet.iis.sinica.edu.tw/dl/wowah/wowah.rar
run:
  - unrar x -r wowah.rar
  - ./analyze WoWAH
upload:
  - *.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above example instructs Roadie to&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;install an apt package &lt;code&gt;unrar&lt;/code&gt;,&lt;/li&gt;
&lt;li&gt;clone a Git repository &lt;code&gt;abcdefg/some-program&lt;/code&gt; from GitHub.com,&lt;/li&gt;
&lt;li&gt;download an archived file in the URL,&lt;/li&gt;
&lt;li&gt;run two commands (where &lt;code&gt;analyze&lt;/code&gt; is a program supplied in the git repository),&lt;/li&gt;
&lt;li&gt;upload messages written in the standard output and files matching &lt;code&gt;*.png&lt;/code&gt; to
a cloud storage.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note that unnecessary elements (except for &lt;code&gt;run&lt;/code&gt;) can be omitted in script files.&lt;/p&gt;

&lt;h4 id=&#34;apt&#34;&gt;apt&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;apt&lt;/code&gt; takes a list of apt packages.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apt:
  - python-numpy
  - python-scipy
  - python-matplotlib
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the above example, Roadie will install three Python packages.&lt;/p&gt;

&lt;p&gt;If you need to update apt repositories, you need to do it and install packages
in &lt;code&gt;run&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;source&#34;&gt;source&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;source&lt;/code&gt; takes a URL where your source code is provided.&lt;/p&gt;

&lt;p&gt;Roadie retrieves your source code in the following manner.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If the URL ends with &lt;code&gt;.git&lt;/code&gt;, Roadie treats it is a git repository and uses
&lt;code&gt;git clone&lt;/code&gt; to obtain the source code.&lt;/li&gt;
&lt;li&gt;If the URL scheme is &lt;code&gt;dropbox://&lt;/code&gt;, the source code will be downloaded from
&lt;a href=&#34;https://www.dropbox.com/&#34;&gt;Dropbox&lt;/a&gt;. This URL is a public link created by
Dropbox but the scheme is replaced from &lt;code&gt;https://&lt;/code&gt; to &lt;code&gt;dropbox://&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If the URL scheme is &lt;code&gt;gs://&lt;/code&gt;, the source code will be downloaded from Google
Cloud Storage (available if only you use Google Cloud Platform).&lt;/li&gt;
&lt;li&gt;If the URL scheme is &lt;code&gt;roadie://&lt;/code&gt;, it means the file is managed by Roadie.
See &lt;a href=&#34;documents/data&#34;&gt;Data&lt;/a&gt; for more information.&lt;/li&gt;
&lt;li&gt;Otherwise, URL schemes &lt;code&gt;http://&lt;/code&gt; and &lt;code&gt;https://&lt;/code&gt; are supported.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In any case, if the URL ends with &lt;code&gt;.zip&lt;/code&gt;, &lt;code&gt;.tar&lt;/code&gt;, or &lt;code&gt;.tar.gz&lt;/code&gt;,
Roadie decompress such archived file.&lt;/p&gt;

&lt;p&gt;Roadie also supports to
&lt;a href=&#34;documents/execution#local-source-files&#34;&gt;upload your source code from your local computer directly&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If your source code is written in Python and it has &lt;code&gt;requirements.txt&lt;/code&gt;,
required packages will be installed automatically.&lt;/p&gt;

&lt;h4 id=&#34;data&#34;&gt;data&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;data&lt;/code&gt; takes a list of URLs.
As same as &lt;code&gt;source&lt;/code&gt;, URL schemes &lt;code&gt;http://&lt;/code&gt;, &lt;code&gt;https://&lt;/code&gt;, &lt;code&gt;dropbox://&lt;/code&gt;,
&lt;code&gt;gs://&lt;/code&gt; (only available with Google Cloud Platform), and &lt;code&gt;roadie://&lt;/code&gt;.
If the URL ends with &lt;code&gt;.zip&lt;/code&gt;, &lt;code&gt;.tar&lt;/code&gt;, or &lt;code&gt;.tar.gz&lt;/code&gt;,
the archived file will be decompressed as expected.&lt;/p&gt;

&lt;p&gt;By default, downloaded files are stored in &lt;code&gt;/data&lt;/code&gt;,
which is the same directory where source code is stored.
You can customize destinations by adding &lt;code&gt;:&lt;/code&gt; plus destination path to each URL.&lt;/p&gt;

&lt;p&gt;For example,&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;data:
  - https://www.sample.com/program.zip:/data/input
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;instructs to download &lt;code&gt;program.zip&lt;/code&gt; and store files in the archive into &lt;code&gt;/data/input&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here is another example,&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;data:
  - roadie://data/some_data_v2.json:some_data.json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It instructs to download &lt;code&gt;some_data_v2.json&lt;/code&gt;, which is managed by Roadie,
into &lt;code&gt;/data&lt;/code&gt;, and rename it to &lt;code&gt;some_data.json&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;roadie://data/&lt;/code&gt; is the directory where files uploaded via &lt;code&gt;roadie data put&lt;/code&gt;
are stored.&lt;/p&gt;

&lt;h4 id=&#34;run&#34;&gt;run&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;run&lt;/code&gt; takes a list of commands.
You can write any commands such as running your program,
installing any packages,
downloading any files (you should use &lt;code&gt;data&lt;/code&gt;, though), etc.&lt;/p&gt;

&lt;p&gt;Note that, you may need to start your command with &lt;code&gt;./&lt;/code&gt;
if the running commands are in your source codes and set in &lt;code&gt;/data&lt;/code&gt;.
roadie doesn&amp;rsquo;t add &lt;code&gt;/data&lt;/code&gt; to &lt;code&gt;$PATH&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For example, if your program is written in &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;node.js&lt;/a&gt;,
the first command may be &lt;code&gt;npm install&lt;/code&gt;.
Of course, you need to install node.js in &lt;code&gt;apt&lt;/code&gt; section.&lt;/p&gt;

&lt;p&gt;Each command listed in the &lt;code&gt;run&lt;/code&gt; section has a zero-origin number,
i.e, the first command has 0.
This number is used to store outputs written in &lt;code&gt;stdout&lt;/code&gt; and
the outputs written in &lt;code&gt;stdout&lt;/code&gt; from &lt;em&gt;i&lt;/em&gt;-th command are stored
in &lt;code&gt;stdout{i}.txt&lt;/code&gt; file.
Those files will be accessed via &lt;code&gt;roadie result&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&#34;upload&#34;&gt;upload&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;upload&lt;/code&gt; takes a list of
&lt;a href=&#34;https://en.wikipedia.org/wiki/Glob_(programming)&#34;&gt;glob&lt;/a&gt; patterns.
Files matching one of those patterns are treated of results
and uploaded to a cloud storage.
To access those uploaded files, use &lt;code&gt;roadie result&lt;/code&gt; command.&lt;/p&gt;

&lt;h3 id=&#34;execution-model&#34;&gt;Execution model&lt;/h3&gt;

&lt;p&gt;Roadie runs your program in a Docker container.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.docker.com/&#34;&gt;&lt;img src=&#34;img/small_h-trans.png&#34; alt=&#34;Docker&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This container is based on &lt;a href=&#34;http://www.ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt; and you can use
most of packages supplied for Ubuntu in Roadie.
Roadie&amp;rsquo;s script file has &lt;code&gt;apt&lt;/code&gt; section which takes a list of apt packages.&lt;/p&gt;

&lt;p&gt;Your program will be copied in &lt;code&gt;/data&lt;/code&gt; in the running container.
Files listed up in &lt;code&gt;data&lt;/code&gt; section of Roadie&amp;rsquo;s script will also be copied in
&lt;code&gt;/data&lt;/code&gt; by default.&lt;/p&gt;

&lt;p&gt;Linux programs can output messages for the standard output &lt;code&gt;stdout&lt;/code&gt; and
the standard error output &lt;code&gt;stderr&lt;/code&gt;.
In Roadie, messages written in &lt;code&gt;stdout&lt;/code&gt; will be treated as results of the program,
and stored in a cloud storage.
Each command in the &lt;code&gt;run&lt;/code&gt; of your script makes one file to store
outputs written in &lt;code&gt;stdout&lt;/code&gt;.
More precisely, &lt;em&gt;i&lt;/em&gt;-th command creates &lt;code&gt;stdout{i}.txt&lt;/code&gt;,
where &lt;em&gt;i&lt;/em&gt; is a zero-origin integer.
Those files are stored in &lt;code&gt;/tmp&lt;/code&gt; before all commands in &lt;code&gt;run&lt;/code&gt; are done.&lt;/p&gt;

&lt;p&gt;On the other hand, outputs written in &lt;code&gt;stderr&lt;/code&gt; are not stored in any persistent
disks but treated as prompt logs, which means you can check such logs while
your instance is still running.
Because outputs written in &lt;code&gt;stderr&lt;/code&gt; cause of network traffic, it isn&amp;rsquo;t
recommended to write huge messages there.&lt;/p&gt;

&lt;p&gt;By default, any other files created by your program will not be stored as
results.
To specify which files should be treated as results
and stored to persistent storage,
use &lt;code&gt;upload&lt;/code&gt; section in the script file.&lt;/p&gt;

&lt;h3 id=&#34;run-command&#34;&gt;run command&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;roadie run&lt;/code&gt; command creates an instance and runs your program on it.
This command requires one script file explained in the next section.
There are many option flags but one of the useful options is &lt;code&gt;--name&lt;/code&gt;,
which sets a given name to the creating instance.
So, suppose you will create an instance named &lt;code&gt;instance1&lt;/code&gt;
with script file &lt;code&gt;script.yml&lt;/code&gt;, run&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie run --name instance1 script.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you don&amp;rsquo;t set any names, roadie makes some name.
After creating the instance, roadie shows the name of the instance.
Such name is used to check instance status, see logs,
and download computation results.&lt;/p&gt;

&lt;p&gt;If &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--follow&lt;/code&gt; flag is set, &lt;code&gt;roadie run&lt;/code&gt; command will print logs from the
created instance until it ends, as same as &lt;code&gt;roadie log&lt;/code&gt; command with &lt;code&gt;-f&lt;/code&gt; or
&lt;code&gt;--follow&lt;/code&gt; flag.&lt;/p&gt;

&lt;h3 id=&#34;specify-source-codes-on-the-fly&#34;&gt;Specify source codes on the fly&lt;/h3&gt;

&lt;p&gt;Sometimes, it is difficult to provide your source codes from the web,
such as Git repository, Dropbox, and some web site.
roadie helps to upload your source code from a local PC to a cloud storage,
which is a private place.
If you use this function, you can omit &lt;code&gt;source&lt;/code&gt; section in your script file.&lt;/p&gt;

&lt;h4 id=&#34;upload-source-codes-from-a-local-directory-a-name-local-source-files-a&#34;&gt;Upload source codes from a local directory &lt;a name=&#34;local-source-files&#34;&gt;&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;--local&lt;/code&gt; flag of &lt;code&gt;roadie run&lt;/code&gt; command takes a path of your source codes.
For example,&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie run --local . --name instance-1 script.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;notifies roadie of the current path as the root path of your source codes.
roadie makes an archive file of the path and uploads it to a cloud storage.
Then, the created instance will use that file as the source codes.&lt;/p&gt;

&lt;p&gt;If you give a path of one file with &lt;code&gt;--local&lt;/code&gt; flag,
roadie uploads that file and the created instance will use it.&lt;/p&gt;

&lt;h4 id=&#34;previously-uploaded-files&#34;&gt;Previously uploaded files&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;--source&lt;/code&gt; flag of &lt;code&gt;roadie run&lt;/code&gt; command takes an instance name
which run previously.
If the previous instance created with &lt;code&gt;--local&lt;/code&gt; flag,
the created new instance will use same uploaded source file.
For example, you created an instance by&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie run --local . --name instance-1 script.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and now you are creating another instance by&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie run --source instance-1 --name instance2 script2.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;the new instance named &lt;code&gt;instance-2&lt;/code&gt; uses same source codes as &lt;code&gt;instance-1&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Logging</title>
      <link>https://jkawamoto.github.io/roadie/documents/logging/</link>
      <pubDate>Sun, 14 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/roadie/documents/logging/</guid>
      <description>

&lt;p&gt;After running your program, it is helpful to check status of your program,
i.e. instance, and check logs.
Roadie provides two commands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;status&lt;/strong&gt; shows status of all instances and kill an instance.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;log&lt;/strong&gt; shows logs from an instance.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;status&#34;&gt;status&lt;/h3&gt;

&lt;p&gt;Status command &lt;code&gt;roadie status&lt;/code&gt; shows your instances are running or have ended.
If your instance has already ended and you also deleted all result data
from the instance, such instance name will be omitted to print.
To print all instance status including such deleted instances, use &lt;code&gt;--all&lt;/code&gt; flag.
However, status of old instances will be deleted after a certain period of time.&lt;/p&gt;

&lt;p&gt;The another property of status command is to kill some instance.
To kill instance &lt;code&gt;INSTANCE&lt;/code&gt;, run&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie status kill INSTANCE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you kill an instance, outputs from the instance might not be stored.&lt;/p&gt;

&lt;h3 id=&#34;log&#34;&gt;log&lt;/h3&gt;

&lt;p&gt;Log command prints log messages from an instance.
To see log messages from instance &lt;code&gt;INSTANCE&lt;/code&gt;, run&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie log INSTANCE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The log messages consist of logs about preprocess and post process,
and outputs your programs write in standard err (&lt;code&gt;stderr&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Roadie&amp;rsquo;s execution model treats outputs written in standard output (&lt;code&gt;stdout&lt;/code&gt;)
and &lt;code&gt;stderr&lt;/code&gt; in different way.
Outputs written in &lt;code&gt;stdout&lt;/code&gt; are uploaded to a bucket as parts of results
from your program.
You can see and download such outputs by &lt;code&gt;roadie result&lt;/code&gt; command but
you cannot check them while your instance is running.&lt;/p&gt;

&lt;p&gt;On the other hand, outputs written in &lt;code&gt;stderr&lt;/code&gt; are not stored in any persistent
disks but treated as prompt logs, which means you can check such logs while
your instance is still running.
Because outputs written in &lt;code&gt;stderr&lt;/code&gt; cause of network traffic, it isn&amp;rsquo;t
recommended to write huge messages there.&lt;/p&gt;

&lt;h4 id=&#34;options&#34;&gt;options&lt;/h4&gt;

&lt;p&gt;Log command has two option flags; &lt;code&gt;--no-timestamp&lt;/code&gt; and &lt;code&gt;--follow&lt;/code&gt;.
If &lt;code&gt;--no-timestamp&lt;/code&gt; flag is set, roadie omits to print time stamps.
If &lt;code&gt;--follow&lt;/code&gt; flag is set, roadie will not end and keep waiting new logs coming. To stop it, use &lt;code&gt;control + c&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Queue</title>
      <link>https://jkawamoto.github.io/roadie/documents/queue/</link>
      <pubDate>Sun, 14 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/roadie/documents/queue/</guid>
      <description>

&lt;p&gt;Roadie supports queue to keep a bunch of script.
Enqueued scripts are run sequentially by default,
but you can add instances working with the queue.&lt;/p&gt;

&lt;h3 id=&#34;add-new-script-to-a-queue&#34;&gt;Add new script to a queue&lt;/h3&gt;

&lt;p&gt;Enqueue a script to a queue, use &lt;code&gt;roadie run&lt;/code&gt; command with &lt;code&gt;--queue&lt;/code&gt; flag.
The &lt;code&gt;--queue&lt;/code&gt; flag takes a queue name and the given script will be enqueued
the queue.
If there are such queues, it will be created.
If there are no instances working with the queue, one instance will be created.
The other flags in &lt;code&gt;roadie run&lt;/code&gt; command are as same as the case of starting
script without queue.&lt;/p&gt;

&lt;h4 id=&#34;example&#34;&gt;example&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie run --local . --name instance-1 --queue queue-1 script.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above command enqueues &lt;code&gt;script.yml&lt;/code&gt; to a queue &lt;code&gt;queue-1&lt;/code&gt;.
The script is named &lt;code&gt;instance-1&lt;/code&gt; so that you can refer results and logs with the
name.&lt;/p&gt;

&lt;p&gt;If there are no instances working with the queue, one instance will be created.&lt;/p&gt;

&lt;h3 id=&#34;queue-management&#34;&gt;Queue management&lt;/h3&gt;

&lt;p&gt;To find existing queues, use &lt;code&gt;roadie queue list&lt;/code&gt; command.
On the other hand, to find enqueued scripts in a queue,
use&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie queue show &amp;lt;queue name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want to stop executing a queue,&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie queue stop &amp;lt;queue name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;do it.
But scripts already running won&amp;rsquo;t be stopped.
To restart stopped queue, use&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie queue restart &amp;lt;queue name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It restarts the queue and creates one instance to handle scripts.&lt;/p&gt;

&lt;h3 id=&#34;instance-management&#34;&gt;Instance management&lt;/h3&gt;

&lt;p&gt;By default, scripts in a queue are handled by one instance.
You can add other instances to handle any queue.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie queue instance add --instances N &amp;lt;queue name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;command adds &lt;code&gt;N&lt;/code&gt;
instances to the given named queue. If you omit &lt;code&gt;--instances&lt;/code&gt; flag,
just one instance will be added.
This command also support &lt;code&gt;--disk-size&lt;/code&gt; flag as same as &lt;code&gt;roadie run&lt;/code&gt; command.
You can modify disk size of instances according to your script.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie queue instance list &amp;lt;queue name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;shows instances working with the given named queue.&lt;/p&gt;

&lt;h3 id=&#34;retrieve-logging-information&#34;&gt;Retrieve logging information&lt;/h3&gt;

&lt;p&gt;To retrieve logging information from tasks, use &lt;code&gt;roadie queue log&lt;/code&gt; command
instead of &lt;code&gt;roadie log&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;The following example shows all logging information from tasks in a queue:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie queue log &amp;lt;queue name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want to see logging information from a specific task, give the task name
, too:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie queue log &amp;lt;queue name&amp;gt; &amp;lt;task name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Roadie</title>
      <link>https://jkawamoto.github.io/roadie/documents/top/</link>
      <pubDate>Sun, 14 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/roadie/documents/top/</guid>
      <description>

&lt;p&gt;Roadie provides a easy way to run your programs on&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;i class=&#34;fa fa-google&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google Cloud Platform&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;&lt;i class=&#34;fa fa-windows&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://azure.microsoft.com/&#34;&gt;Microsoft Azure&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It helps you to upload your source codes to the cloud, create and delete
instances, and manage outputs.&lt;/p&gt;

&lt;h3 id=&#34;contents&#34;&gt;Contents&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;documents/installation&#34;&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;documents/configuration&#34;&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;documents/execution&#34;&gt;Run your program&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;documents/logging&#34;&gt;Logging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;documents/data&#34;&gt;Data handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;documents/queue&#34;&gt;Taks queue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;simple-example&#34;&gt;Simple example&lt;/h3&gt;

&lt;p&gt;Suppose your are in a directory which has your source code and &lt;code&gt;script.yml&lt;/code&gt;,
then the following command&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie run --local . --name analyze-wowah script.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;uploads your source code in the current directory,
and run them in such a manner that &lt;code&gt;script.yml&lt;/code&gt; specifies.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;script.yml&lt;/code&gt; is a simple YAML file like&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apt:
  - unrar
data:
  - http://mmnet.iis.sinica.edu.tw/dl/wowah/wowah.rar
run:
  - unrar x -r wowah.rar
  - analyze WoWAH
upload:
  - *.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above &lt;code&gt;script.yml&lt;/code&gt; asks roadie to install apt package &lt;code&gt;unrar&lt;/code&gt; and
download a data file from such URL as the preparation. Then, it directs
to run those two commands; unrar the downloaded file, analyze the obtained
data files.&lt;/p&gt;

&lt;p&gt;You can check your program is still running or ends by&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie status
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After the program finishes,
&lt;code&gt;roadie&lt;/code&gt; uploads results of such commands to a cloud storage.
You can access those results by&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie result get analyze-wowah &amp;quot;*&amp;quot; -o ./res
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;roadie&lt;/code&gt; will download all result files into &lt;code&gt;./res&lt;/code&gt; directory.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Roadie</title>
      <link>https://jkawamoto.github.io/roadie/ja/top/</link>
      <pubDate>Sun, 14 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jkawamoto.github.io/roadie/ja/top/</guid>
      <description>

&lt;p&gt;Roadie はクラウドプラットフォームであなたのプログラムを実行する手助けを行います。&lt;/p&gt;

&lt;p&gt;Roadie を用いることで、&lt;strong&gt;クラウドプラットフォームの詳しい仕組みを理解するために時間を割くことなく&lt;/strong&gt;、
簡単にプログラムを実行し計算結果を取得することができます。&lt;/p&gt;

&lt;p&gt;Roadie は、次のクラウドプラットフォームをサポートしています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;i class=&#34;fa fa-google&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://cloud.google.com/&#34;&gt;Google Cloud Platform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;i class=&#34;fa fa-windows&#34; aria-hidden=&#34;true&#34;&gt;&lt;/i&gt; &lt;a href=&#34;https://azure.microsoft.com/&#34;&gt;Microsoft Azure&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Roadie では、&lt;a href=&#34;https://ja.wikipedia.org/wiki/YAML&#34;&gt;YAML&lt;/a&gt; 形式のスクリプトファイルを使って、
クラウドでプログラムを実行する手順を指定します。&lt;/p&gt;

&lt;p&gt;例えば、クラウドプラットフォームを使って台湾中央研究院で公開されている&lt;a href=&#34;http://mmnet.iis.sinica.edu.tw/dl/wowah/&#34;&gt;データファイル&lt;/a&gt;を
カレントディレクトリにある &lt;code&gt;analyze&lt;/code&gt;というプログラム&lt;sup&gt;&lt;a href=&#34;ja/top#program-requirement&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; で解析する場合、
次のようなスクリプトファイルを用意し &lt;code&gt;script.yml&lt;/code&gt; という名前で保存します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apt:
- unrar
data:
- http://mmnet.iis.sinica.edu.tw/dl/wowah/wowah.rar
run:
- unrar x -r wowah.rar
- ./analyze WoWAH
upload:
- *.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;そして、次のコマンドを実行することで Roadie は必要なクラウド環境をセットアップしプログラムを実行します。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ roadie run --local . script.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Roadie は解析プログラムが終了すると、計算結果を保存したのち不要となったクラウド環境を削除し &lt;strong&gt;クラウド使用料金を節約します&lt;/strong&gt;。
プログラムが終了するまでコンピュータの前で待機し手動で削除処理を行う必要はありません。&lt;/p&gt;

&lt;h3 id=&#34;コンテンツリスト&#34;&gt;コンテンツリスト&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;ja/installation&#34;&gt;インストール方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;ja/configuration&#34;&gt;設定変更&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;ja/execution&#34;&gt;プログラムの実行&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;ja/logging&#34;&gt;ステータスとログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;ja/data&#34;&gt;ファイルの管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;ja/queue&#34;&gt;タスクキュー&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;program-requirement&#34;&gt;1&lt;/a&gt;: Roadie ではクラウドプラットフォーム上に
&lt;a href=&#34;https://www.ubuntu.com/&#34;&gt;Ubuntu&lt;/a&gt; 環境をセットアップしてプログラムを実行します。
そのため、実行するプログラムは 64bit Linux で実行可能なバイナリかスクリプトである必要があります。
詳細は、&lt;a href=&#34;ja/execution&#34;&gt;プログラムの実行&lt;/a&gt; をご覧ください。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>